cmake_minimum_required(VERSION 3.10)

# set the project name
project(ControllerFacadeModule C CXX)

add_library(CONTROLLERFACADE "src/ControllerFacade.cpp" "include/ControllerFacade.hpp")
target_include_directories(CONTROLLERFACADE PUBLIC "include/")
target_link_libraries(CONTROLLERFACADE PUBLIC INFERENCER)
target_link_libraries(CONTROLLERFACADE PUBLIC DISTRIBUTOR)
target_link_libraries(CONTROLLERFACADE PUBLIC INFERENCINGDISTRIBUTOR)
target_link_libraries(CONTROLLERFACADE PUBLIC INFERENCINGDISTRIBUTORCLASSIFICATION)
target_link_libraries(CONTROLLERFACADE PUBLIC INFERENCINGDISTRIBUTORDETECTION)
target_link_libraries(CONTROLLERFACADE PUBLIC SAVERESULTHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC INPUTIMAGEHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC NEURALNETWORKHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC STARTHANDLER)
# target_link_libraries(CONTROLLERFACADE PUBLIC PAGERHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC NEXTHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC PREVHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC NEWRESULTHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC PREDICTIONHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC TRAININGDISTRIBUTOR)
target_link_libraries(CONTROLLERFACADE PUBLIC NEWTRAINSTEPHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC TOPOLOGYINFERENCER)
target_link_libraries(CONTROLLERFACADE PUBLIC IMAGEPAGER)
target_link_libraries(CONTROLLERFACADE PUBLIC VIEW_MODULE)
target_link_libraries(CONTROLLERFACADE PUBLIC DEVICEHANDLER)
target_link_libraries(CONTROLLERFACADE PUBLIC UPDATERESULTHANDLER)
# target_link_libraries(CONTROLLERFACADE PUBLIC INFERENCEPAGEADAPTER)
