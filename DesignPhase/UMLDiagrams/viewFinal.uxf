<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>328</x>
      <y>1040</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>ViewModule::MainMenu
--
- imageClassificationButton : QButton
- objectDetectionButton : QButton
- trainingButton : QButton 
- topologyButton : QButton
- guiText : English
--
+ showPage() : void
+ pageSet() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1560</x>
      <y>1024</y>
      <w>240</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>ViewModule::Topology
--
- chooseTopologyButton : QButton
- saveVisualisationButton : QButton
- topologyRenderer : TopologyRenderer
- currentTopology : Image
- topologyLabel : QLabel
- guiText : English
--
+ &lt;&lt;constructor&gt;&gt; Topology()
+ update() : void
+ showPage() : void
+ topolgyChanged(nn : NeuralNetwork) : void
+ pageSet() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1000</x>
      <y>568</y>
      <w>168</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>{abstract}
ViewModule::View
--
- panel : Panel
--
/+ setController() : void/
/+ showPage() : void/
+ pageActive(flag : bool) : void
/+ pageSet() : void/
/+ update()/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1264</x>
      <y>1040</y>
      <w>288</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>ViewModule::InferencePage
--

--
+ &lt;&lt;constructor&gt;&gt; InferencePage()
+ getOperatingMode() : string
+ getDevices() : string[]
+ getInputMode() : string
+ getNeuralNetworkPath() : string
+ getShowResults() : bool
+ getSaveResults() : bool
+ getImageAmount() : string
+ getInputPathes() : string[]
+ getAppendResult() : string[]
+ setPowerPrediction(amount : int) : void
+ setPerformancePrediction(amount : int) : void
+ showPage() : void
+ pageSet() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>704</y>
      <w>656</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>800.0;10.0;800.0;40.0;10.0;40.0;10.0;420.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1072</x>
      <y>832</y>
      <w>344</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0;410.0;170.0;410.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1072</x>
      <y>832</y>
      <w>592</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0;720.0;170.0;720.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>656</x>
      <y>1400</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2456</x>
      <y>392</y>
      <w>680</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>{abstract}
RendererModule::Renderer
--
- resultImage : Image
--
/+ drawGraphic() : E/
# drawRectangle(img : Image, x : double, y : double, width : double, height : double, fillingColor : string, strokeColor : string) : Image
# drawText(img : Image, text : string, , x : double, y : double, width : double, height : double) : Image
# drawLine(img : Image, x : double, y : double, fillingColor : string, strokeColor : string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>552</x>
      <y>1056</y>
      <w>288</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>ViewModule::ClassificationResultPanel
--
- currentImage : Image
- currentResult : Image
- imageLabel : QLabel
- resultLabel : QLabel
- nextNNButton : QButton
- prevNNButton : QButton
- nextImgButton : QButton 
- prevImgButton : QButton
- saveResultButton : QButton
- renderer : ClassificationResultRenderer
- imageNameLabel : QLabel
- neuralNetwrokNameLabel : QLabel
- guiText : English
--
+ &lt;&lt;constructor&gt;&gt; ClassificationResultPanel()
+ update() : void
- displayImage(img : Image) : void 
- displayResult(img : Image) : void
# resultsChanged(nnName: string, imgName : string, 
                            image : Image, result: Result) : void
+ nextNNEnable(flag : bool) : void
+ prevNNEnable(flag : bool) : void
+ nextImageEnable(flag : bool) : void
+ prevImageEnable(flag : bool) : void
+ saveResultEnable(flag : bool) : void
+ pageSet() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>488</x>
      <y>1432</y>
      <w>400</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>ViewModule::DetectionResultPanel
--
- renderer : DetectionResultRenderer
--
+ &lt;&lt;constructor&gt;&gt; DetectionResultPanel()
# resultsChanged(image : Image, result: Result) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2464</x>
      <y>856</y>
      <w>448</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>RendererModule::DetectionResultRenderer
--

--
+ drawGraphic(result : DetectionResult) : Image
- combineBoundingBoxProbabilities(boundingBoxes : BoundingBox[]) : Probability[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2944</x>
      <y>856</y>
      <w>408</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>RendererModule::ChartRenderer
--

--
+ drawGraphic(pointsArrayTest : float[], pointsArrayTraining : float[]) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2464</x>
      <y>648</y>
      <w>280</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>RendererModule::ClassificationResultRenderer
--

--
+ drawGraphic(result : Result) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2592</x>
      <y>536</y>
      <w>168</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;90.0;10.0;90.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2736</x>
      <y>536</y>
      <w>368</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;330.0;90.0;70.0;90.0;70.0;370.0;440.0;370.0;440.0;400.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2592</x>
      <y>792</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>1576</y>
      <w>344</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>ViewModule::DetectionControlPanel
--

--
+ &lt;&lt;constructor&gt;&gt; ClassifictaionControlPanel() </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>992</x>
      <y>1448</y>
      <w>32</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0;20.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>992</x>
      <y>760</y>
      <w>248</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>ViewModule::ContentView
--

--
# getPathsFromExplorer(types : string[]) : string[]

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1072</x>
      <y>704</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3168</x>
      <y>648</y>
      <w>296</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>RendererModule::TopologyRenderer
--

--
+ drawGraphic(neuralNetwork : NeuralNetwork) : Image
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2736</x>
      <y>536</y>
      <w>584</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;710.0;90.0;710.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>1064</y>
      <w>40</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;60.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>832</x>
      <y>1048</y>
      <w>448</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;540.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1648</x>
      <y>1208</y>
      <w>480</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>ViewModule::Training
--
- textFieldLearningRate : QLineEdit
- textFieldPrecision : QLineEdit
- textFieldName : QLineEdit
- chooseNeuralNetworkButton : QButton
- chooseDatasetButton : QButton
- trainButton : QButton
- learningProgessLabel : QLabel
- chartRenderer : ChartRender
- currentGraphic : Image
- learningComboBox : QComboBox
- guiText : English
--
+ update() : void
+ showPage() : void
+ newTrainingFinished(pointsArrayTest : float[], pointsArrayTraining : float[]) : void
+ getLearningRate() : float
+ getPrecision() : float
+ getName() : string
+ getLearningMode() : string
- displayGraphic(img : Image) : void
+ pageSet() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1072</x>
      <y>832</y>
      <w>760</w>
      <h>392</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0;930.0;170.0;930.0;470.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1272</x>
      <y>1328</y>
      <w>288</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ViewModule::DeviceCheckBoxManager
--
- devicelist : list&lt;string&gt;
- checkBoxes : list&lt;QCheckBox&gt;
- panel : QPanel
- guiText : English
--
&lt;&lt;constructor&gt;&gt; + DeviceCheckboxManager(list&lt;string&gt;, 
                          panel : QPanel)
+ getCheckedDevices() : string[]
+ setAvailableDevices(devices : string[]) : void
+ showPage() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2872</x>
      <y>656</y>
      <w>272</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>RendererModule::DiagramRenderer
--

--
+ drawGraphic(probabilities : Probability[]) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2736</x>
      <y>536</y>
      <w>296</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;350.0;90.0;350.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>1192</y>
      <w>48</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>40.0;180.0;20.0;180.0;20.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>272</y>
      <w>440</w>
      <h>584</h>
    </coordinates>
    <panel_attributes>ViewModule::ViewFacade
--
_- facade : ViewFacade_
- mainMenu : MainMenu
- inferencePage : InferencePage
- imageClassificationControlPanel : ImageClassificationControlPanel
- classificationResultPanel : ClassificationResultPanel
- detectionResultPanel : DetectionResultPanel
- topology : Topology
- training : Training
- detectionControlPanel : DetectionControlPanel
--
- ViewFacade()
_+ getInstance() : ViewFacade_
+ nextNNEnable(flag : bool) : void
+ prevNNEnable(flag : bool) : void
+ nextImageEnable(flag : bool) : void
+ prevImageEnable(flag : bool) : void
+ saveResultNNEnable(flag : bool) : void
+ getCheckBoxesDevice() : string[]
+ getCheckBoxAppendResults() : bool
+ getShowResultsCheckBox() : bool
+ getSaveResultsCheckBox() : bool
+ getAppendResultsCheckBox() : bool
+ getNeuralNetworkPath() : string
+ getOperatingMode() : string
+ getImageAmount() : string
+ getOperatingMode() : string
+ getDevices() : string[]
+ getInputMode() : string
+ getNeuralNetworkPath() : string
+ getShowResults() : bool
+ getSaveResults() : bool
+ getImageAmount() : string
+ getInputPathes() : string[]
+ getAppendResult() : string[]
+ topolgyChanged(nn : NeuralNetwork) : void
+ newTrainingFinished(pointsArrayTest : float[], pointsArrayTraining : float[]) : void
+ getLearningRate() : float
+ getPrecision() : float
+ getName() : string
+ getLearningMode() : string
+ getPathsFromExplorer(types : string[]) : string[]
+ setPowerPrediction(amount : int) : void
+ setPerformancePrediction(amount : int) : void
+ update()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>904</x>
      <y>1104</y>
      <w>344</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>ViewModule::ImageClassificationControlPanel
--
- showResultsCheckBox : QCheckBox
- saveResultsCheckBox : QCheckBox
- appendResultsCheckBox : QCheckBox
- chooseNeuralNetwork : QButton
- startImageClass : QButton
- addImageButton : QButton
- inputModeComboBox : QComboBox
- operatingModeComboBox : QComboBox
- deviceCheckBoxManager : DeviceCheckBoxManager
- powerPrediction : float
- performancePrediction : float
- panelCheckBox : QPanel
- predictionText : QPanel
- guiText : English
--
+ &lt;&lt;constructor&gt;&gt; ImageClassificationControlPanel() 
+ showPage() : void
+ getCheckBoxesDevice() : string[]
+ getCheckBoxAppendResults() : bool
+ getShowResultsCheckBox() : bool
+ getSaveResultsCheckBox() : bool
+ getAppendResultsCheckBox() : bool
+ getNeuralNetworkPath() : string
+ getOperatingMode() : string
+ getInputMode() : string
+ setPowerPrediction(amount : float) : void
+ setPerformancePrediction(amount : float) : void
+ pageSet() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>304</w>
      <h>664</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>360.0;810.0;10.0;810.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>1240</w>
      <h>848</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>1530.0;790.0;1530.0;1040.0;10.0;1040.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>1416</w>
      <h>848</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>1750.0;430.0;1750.0;1040.0;10.0;1040.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>1416</w>
      <h>848</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>1530.0;490.0;1530.0;550.0;1750.0;550.0;1750.0;1040.0;10.0;1040.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>1712</w>
      <h>848</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>2120.0;820.0;2120.0;1040.0;10.0;1040.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>1024</w>
      <h>848</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>1260.0;760.0;1260.0;1040.0;10.0;1040.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>656</w>
      <h>760</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>800.0;930.0;10.0;930.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>144</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>160.0;300.0;10.0;300.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1328</x>
      <y>0</y>
      <w>304</w>
      <h>768</h>
    </coordinates>
    <panel_attributes>{abstract}
ViewModule::GUIText
--
- inputMode : string[]
- showResults : string
- saveResults : string
- chooseNeuralNetwork : string
- operatingMode : string[]
- appendResults : string
- startImageClass : string
- imageName : string
- neuralNetworkName : string
- previousImage : string
- nextImage : string
- previousNN : string
- nextNN : string
- saveResult : string
- chooseDataset : string
- learningMode : string[]
- learningRate : string
- precision : string
- nameTraining : string
- train : string
- learning progress : string 
- testAccuracy : string
- trainingsAccuracy : string
- chooseTopology : string
- saveVisualisation : string
- powerPrediction : string
- powerPredictionUnit : string
- performancePrediction : string
- performancePredictionUnit : string
--
/- getShowResults() : string/
/- getSaveResults() : string/
/- getChooseNeuralNetwork() : string/
/- getOperatingMode() : string[]/
/- getAppendResults() : string/
/- getStartImageClass() : string/
/- getImageName() : string/
/- getNeuralNetworkName() : string/
/- getPreviousImage() : string/
/- getNextImage() : string/
/- getPreviousNN() : string/
/- getNextNN() : string/
/- getSaveResult() : string/
/- getChooseDataset() : string/
/- getLearningMode() : string[]/
/- getLearningRate() : string/
/- getPrecision() : string/
/- getNameTraining() : string/
/- getTrain() : string/
/- getLearning() progress : string /
/- getTestAccuracy() : string/
/- getTrainingsAccuracy() : string/
/- getChooseTopology() : string/
/- getSaveVisualisation() : string/
/- getPerformancePrediction : string/
/- getPerformancePredictionUnit : string/
/- getPowerPrediction() : string/
/- getPowerPredictionUnit() : string/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1792</x>
      <y>560</y>
      <w>232</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>ViewModule::GUITextEnglish
--

--
- getShowResults() : string
- getSaveResults() : string
- getChooseNeuralNetwork() : string
- getOperatingMode() : string[]
- getAppendResults() : string
- getStartImageClass() : string
- getImageName() : string
- getNeuralNetworkName() : string
- getPreviousImage() : string
- getNextImage() : string
- getPreviousNN() : string
- getNextNN() : string
- getSaveResult() : string
- getChooseDataset() : string
- getLearningMode() : string[]
- getLearningRate() : string
- getPrecision() : string
- getNameTraining() : string
- getTrain() : string
- getLearning() progress : string 
- getTestAccuracy() : string
- getTrainingsAccuracy() : string
- getChooseTopology() : string
- getSaveVisualisation() : string
- getPerformancePrediction : string
- getPerformancePredictionUnit : string
- getPowerPrediction() : string
- getPowerPredictionUnit() : string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>760</y>
      <w>336</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;400.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1160</x>
      <y>576</y>
      <w>184</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>848</y>
      <w>368</w>
      <h>432</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>440.0;520.0;10.0;520.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
