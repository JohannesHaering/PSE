<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1323</x>
      <y>126</y>
      <w>553</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Implementation&gt;&gt;
Package::Training
{abstract}
--

--
+perform(input_is : double[][][], output_is : double[][][], output_should : double[][][], learning_rate : double)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>378</x>
      <y>126</y>
      <w>553</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>&lt;&lt;LayerBackPropagation&gt;&gt;
Package::Training
--
-layer : NeuralNetwork::NetworkLayer
--
&lt;&lt;constructor&gt;&gt;+LayerBackPropagation(layer : NeuralNetwork::ConvolutionLayer)
&lt;&lt;constructor&gt;&gt;+LayerBackPropagation(layer : NeuralNetwork::ActivationLayer)
&lt;&lt;constructor&gt;&gt;+LayerBackPropagation(layer : NeuralNetwork::Poling_layer)
&lt;&lt;constructor&gt;&gt;+LayerBackPropagation(layer : NeuralNetwork::LocalResponseNormalizationLayer)
&lt;&lt;constructor&gt;&gt;+LayerBackPropagation(layer : NeuralNetwork::DenseLayer)
&lt;&lt;constructor&gt;&gt;+LayerBackPropagation(layer : NeuralNetwork::FlattenLayer)
&lt;&lt;constructor&gt;&gt;+LayerBackPropagation(layer : NeuralNetwork::DropoutLayer)
&lt;&lt;constructor&gt;&gt;+LayerBackPropagation(layer : NeuralNetwork::InceptionLayer)
+get_Implementation() : Implementation
+propagate(input_is : double[][][], output_is : double[][][], output_should : double[][][], learning_rate : double)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1057</x>
      <y>273</y>
      <w>427</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ConvolutionImplementation&gt;&gt;
Package::Training
--
-layer : NeuralNetwork::ConvolutionLayer
--
&lt;&lt;constructor&gt;&gt;+ConvolutionImplementation(layer : NeuralNetwork::ConvolutionLayer)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>119</y>
      <w>280</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Trainer&gt;&gt;
Package::Training
{abstract}
--
-neural_network : NeuralNetwork::NeuralNetwork
-result_is : Results::ResultModel
-result_correct : Results::ResultModel
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>924</x>
      <y>133</y>
      <w>413</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
imp</panel_attributes>
    <additional_attributes>570.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1435</x>
      <y>196</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1498</x>
      <y>273</y>
      <w>427</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ActivationImplementation&gt;&gt;
Package::Training
--
-layer : NeuralNetwork::ConvolutionLayer
--
&lt;&lt;constructor&gt;&gt;+ActivationImplementation(layer : NeuralNetwork::ActivationLayer)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1253</x>
      <y>224</y>
      <w>462</w>
      <h>63</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;70.0;10.0;20.0;640.0;20.0;640.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>273</x>
      <y>168</y>
      <w>119</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;20.0;150.0;20.0</additional_attributes>
  </element>
</diagram>
