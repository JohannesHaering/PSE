<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>1</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>895</x>
      <y>582</y>
      <w>35</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
I/O::FileIO
--
- singleton, FileIO
- sileStream, fileStream
--
- fileIO(), FileIO
/+ readFile(filePath : string), IData/
/+ writeFile(filePath : string, data : IData), boolean/
+ getInstance(), IFileIO
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>866</x>
      <y>616</y>
      <w>45</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>I/O::TextFileIO
--

--
+ readFile(filePath : string), IData
+ writeStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>921</x>
      <y>636</y>
      <w>37</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>I/O::MultipleImageFileIO
--

--
+ ReadFile(filePaths : string[]), IData
+ WriteStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>887</x>
      <y>600</y>
      <w>26</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>240.0;10.0;240.0;70.0;10.0;70.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>866</x>
      <y>636</y>
      <w>47</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>I/O::MultipleTextFileIO
--

--
+ readFile(filePath : string), IData
+ writeStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>887</x>
      <y>628</y>
      <w>3</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>921</x>
      <y>616</y>
      <w>37</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>I/O::ImageFileIO
--

--
+ readFile(filePath : string), IData
+ writeStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>939</x>
      <y>628</y>
      <w>3</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>908</x>
      <y>605</y>
      <w>34</w>
      <h>13</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;320.0;20.0;320.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>964</x>
      <y>616</y>
      <w>38</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>I/O::VideoFileIO
--

--
+ readFile(filePath : string), IData
+ writeStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>939</x>
      <y>605</y>
      <w>47</w>
      <h>13</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;450.0;20.0;450.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>774</x>
      <y>586</y>
      <w>21</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
I/O::Data
--

--
/+ getData(), E/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>791</x>
      <y>615</y>
      <w>35</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>I/Oge::MultipleImageData
--
- data : image[]
--
&lt;&lt;constructor&gt;&gt; + MultipleimageData(data : image[])
+ getData(), image[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>829</x>
      <y>615</y>
      <w>30</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>I/O::VideoData
--
- video : Video
--
&lt;&lt;constructor&gt;&gt; + VideoData(data : video)
+ getData(), video</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>689</x>
      <y>615</y>
      <w>32</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>I/O::MultipleStringData
--
- stringData : string
--
&lt;&lt;constructor&gt;&gt; + MultipleStringData(data : string[])
+ getData(), string[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>724</x>
      <y>615</y>
      <w>30</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>I/O::StringData
--
- stringData : string
--
&lt;&lt;constructor&gt;&gt; + StringData(data : string)
+ getData(), string
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>759</x>
      <y>615</y>
      <w>28</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>I/O::ImageData
--
- imageData : Image
--
&lt;&lt;constructor&gt;&gt; + ImageData(data : image)
+ getData(), image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>742</x>
      <y>604</y>
      <w>44</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>420.0;10.0;420.0;70.0;10.0;70.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>769</x>
      <y>610</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>783</x>
      <y>609</y>
      <w>60</w>
      <h>8</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;580.0;20.0;580.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>708</x>
      <y>604</y>
      <w>78</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>760.0;10.0;760.0;70.0;10.0;70.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>783</x>
      <y>604</y>
      <w>26</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;240.0;70.0;240.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>746</x>
      <y>578</y>
      <w>18</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Stores the abstractly 
and independently 
from the file I/O</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>582</y>
      <w>20</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>939</x>
      <y>572</y>
      <w>18</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Generic abstract IO class
The inherited classes
implement the concrete IO
for the concrete classes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>927</x>
      <y>579</y>
      <w>16</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>832</x>
      <y>475</y>
      <w>59</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>ModelFacade::ImageFacade
--

--
+ getImage(filePath : string, width : int, height : int, channelNumb : int) : int[]
+ getImages(filePaths : string[], width : int, height : int, channelNumb : int) : int[][]
+ getImagesFromTxtFile(filePath : string, width : int, height : int, channelNumb : int) : int[][]
+ getImageFromCamera(deviceId : int, width : int, height : int, channelNumb : int) : int[]
+ getImagesFromVideo(filePath : string, width : int, height : int, channelNumb : int) : int[][] 


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>819</x>
      <y>447</y>
      <w>21</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>ModelFacade::Facade
{abstract}
--
- fileIO : FileIO
- parser : Parser
- videoHandler : VideoHandler
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>769</x>
      <y>475</y>
      <w>60</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>ModelFacade::DetectionDatasetFacade
--

--
+ loadDataset(directory : string, width : int, height : int, channelNumb : int) : DetectionDatset</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>701</x>
      <y>475</y>
      <w>62</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>ModelFacade::ClassificationDatasetFacade
--

--
+ loadDataset(directory : string, width : int, height : int, channelNumb : int) : ClassificationDataset
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>893</x>
      <y>475</y>
      <w>48</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>ModelFacade::ParseResultFacade
--

--
+ parseClassificationResult(resultString : string) : ClassificatiomResult
+ parseDetectionResult(resultString : string) : DetectionResult</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>732</x>
      <y>459</y>
      <w>100</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>980.0;10.0;980.0;100.0;10.0;100.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>829</x>
      <y>459</y>
      <w>90</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;880.0;100.0;880.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>795</x>
      <y>459</y>
      <w>37</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>350.0;10.0;350.0;100.0;10.0;100.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>829</x>
      <y>459</y>
      <w>32</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;300.0;100.0;300.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>532</x>
      <y>616</y>
      <w>44</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>VideoHandler::IVideoCutter
{abstract}
--

--
/+ cutIntoFrames(stream : VideoStream, frameInterval : int) : Image[]/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>603</x>
      <y>590</y>
      <w>33</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>VideoHandler::CameraHandler
--
deviceId : int
timeout : int
frameInterval : int
--
&lt;&lt;construcotr&gt;&gt; + CameraHandler(deviceId : int, timeout : int)
+ getNextFrame() : image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>603</x>
      <y>617</y>
      <w>32</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>VideoHandler::IVideoHandler
{abstract}
--
FrameInterval : int
--
/+ handleVideo(stream : VideoStream) : Image[]/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>532</x>
      <y>634</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>&lt;&lt;VideoCutter&gt;&gt;
VideoHandler::VideoHandler
{}
--

--
&lt;&lt;construcotr&gt;&gt; + VideoCutter()
+ cutIntoFrames(stream : VideoStream, frameInterval : int) : image[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>473</x>
      <y>582</y>
      <w>44</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>VideoHandler::IVideoLibAdapter
{abstract}
--

--
/ + cutIntoFrames(stream, VideoStream, frameInterval int) : Image[]/
/ + loadFrameFromCamera(cameraId : int) : Image /
/ + openCamera(cameraID : int) : boolean /
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>551</x>
      <y>626</y>
      <w>3</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>575</x>
      <y>618</y>
      <w>30</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0;110.0;60.0;280.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>604</x>
      <y>644</y>
      <w>31</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>VideoHandler::AviVideosHandler
--
frameInterval : int
--
&lt;&lt;constructor&gt;&gt;+ AviVideoHandler(frameInterval : int)
+ handleVideo(stream : VideoStream) : image[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>473</x>
      <y>611</y>
      <w>44</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>VideoHandler::OpenCVAdapter
--
_- videoLibAdapter : IVideoLibAdapter _
--
&lt;&lt;constructor&gt;&gt; - OpenCWAdapter()
+ cutIntoFrames(stream : VideoStream, frameInterval : int) : Image[]
+ loadFrameFromCamera(cameraId : int) : Image 
+ openCamera(cameraID : int) : boolean
_ + getInstance() : OpenCVAdapter_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>516</x>
      <y>585</y>
      <w>18</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0;100.0;380.0;160.0;380.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>493</x>
      <y>595</y>
      <w>3</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>603</x>
      <y>561</y>
      <w>33</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>VideoHandler::ICameraHandler
--

--
/+ GetNextFrame()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>618</x>
      <y>627</y>
      <w>3</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>516</x>
      <y>583</y>
      <w>89</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;670.0;10.0;670.0;120.0;870.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>579</y>
      <w>3</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>642</x>
      <y>547</y>
      <w>24</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Is responsible for
opening/ closing the connection to 
the camera
As well as taking pictures</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>633</x>
      <y>554</y>
      <w>12</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;80.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>641</x>
      <y>610</y>
      <w>14</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Is responsible for 
cutting the video 
into frames</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>632</x>
      <y>615</y>
      <w>12</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;40.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>569</x>
      <y>602</y>
      <w>14</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Cuts the video into 
frames</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>569</x>
      <y>607</y>
      <w>5</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;110.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>465</x>
      <y>567</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Adapter to video library 
to support the needed 
functionality</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>470</x>
      <y>572</y>
      <w>9</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>70.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1264</x>
      <y>78</y>
      <w>25</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>View::MainMenu
--
 
--
+ imageClassificationClicked(): void
+ objectDetectionClicked(): void
+ trainingClicked(): void
+ showTopologyClicked(): void
+ openPage(View page): void
+ showPage() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1323</x>
      <y>86</y>
      <w>43</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>View::ImageClassificationControlPanel
--
- checkBoxesDevice : map&lt;string, boolean&gt;
- checkBoxAppendResult : boolean
# startButtonContent : string
--
+ dropDownChanged(string name) : void 
+ addImageClicked() : Image
+ checkBoxChanged(flag : bool, name: sting) : void
+ modeChanged(name : sting) : void
+ imageChanged(img : Image) : void
+ neuronalNetworkChanged(nn : NeuralNetwork) : void
+ startButtonClicked() : void
+ showPage() : void
+ getCheckBoxesDevice() : map&lt;string : boolean&gt;
+ setPossibleDevices(devices : string[]) : void
+ getCheckBoxAppendResults() : bool
# resultsChanged(result: Result) : void
# setCheckBoxAppendResults(flag : bool) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1426</x>
      <y>78</y>
      <w>30</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>View::Topology
--

--
+ chooseTopologyClicked() : void
+ saveVisualisationClicked() : string
+ showPage() : void
- drawTopology(neuralNetwork: NeuralNetwork) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1341</x>
      <y>19</y>
      <w>21</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>{abstract}
View::ViewPage
--
- controller : Controller
--
/+ setController() : void/
/+ showPage() : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1374</x>
      <y>78</y>
      <w>36</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>View::InferencePage
--

--
+ getOperatingMode() : OperatingMode
+ getDevices() : string[]
+ getInputMode() : string
+ getNeuralNetworkPath() : string
+ getInputPathes() : string[]
+ getAppendResult : string[]
+ start() : void
+ showPage() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1389</x>
      <y>19</y>
      <w>21</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>{abstract}
View::Observer
--

--
/+ update()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1278</x>
      <y>30</y>
      <w>75</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>730.0;10.0;730.0;100.0;10.0;100.0;10.0;480.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1350</x>
      <y>63</y>
      <w>3</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1350</x>
      <y>63</y>
      <w>43</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;410.0;60.0;410.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1350</x>
      <y>63</y>
      <w>89</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;870.0;60.0;870.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1361</x>
      <y>20</y>
      <w>30</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1277</x>
      <y>100</y>
      <w>30</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;280.0;130.0;10.0;130.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1502</x>
      <y>45</y>
      <w>85</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>{abstract}
Renderer::ImageRenderer
--
- resultImage : Image
--
/+ drawGraphic() : E/
# drawRectangle(img : Image, x : double, y : double, width : double, height : double, fillingColor : string, strokeColor : string) : Image
# drawText(img : Image, text : string, , x : double, y : double, width : double, height : double) : Image
# drawLine(img : Image, x : double, y : double, fillingColor : string, strokeColor : string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1291</x>
      <y>78</y>
      <w>29</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>View::ClassificationResultPanel
--
- currentImage : Image
--
+ showPage() : void
+ saveButtonClicked() : void
+ previousImgClicked() : void
+ nextImgClicked() : void
+ previousNNClicked() : void
+ nextNNClicked() : void
+ getImage() : Image
+ setImage(img : Image) : void 
+ setResult(result : Result) : void
# resultsChanged(result: Result) : void
# getRenderedResult(result : Result) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1303</x>
      <y>63</y>
      <w>50</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>480.0;10.0;480.0;60.0;10.0;60.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>123</y>
      <w>50</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>View::DetectionResultPanel
--

--
# resultsChanged(result: Result) : void
# getRenderedResult(result : Result)
- drawBoundingBoxes(boundingBoxes : BoundingBox[]) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1503</x>
      <y>103</y>
      <w>35</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Renderer::DetectionResultRender
--

--
+ drawGraphic(result : DetectionResult) : Image
- combineBoundingBoxProbabilities(boundingBoxes : BoundingBox[]) : Probability[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1552</x>
      <y>77</y>
      <w>34</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Renderer::DiagramRender
--

--
+ drawGraphic(probabilities : Probability[]) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1503</x>
      <y>77</y>
      <w>35</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Renderer::ClassificationResultRender
--

--
+ drawGraphic(result : ClassificationResult) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1519</x>
      <y>63</y>
      <w>21</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;90.0;10.0;90.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1537</x>
      <y>63</y>
      <w>35</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;330.0;90.0;330.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1519</x>
      <y>95</y>
      <w>3</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1323</x>
      <y>128</y>
      <w>43</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>View::DetectionControlPanel
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1342</x>
      <y>119</y>
      <w>3</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1340</x>
      <y>45</y>
      <w>21</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>View::ContentView
--

--
/+ getDataFromExplorer() : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1350</x>
      <y>30</y>
      <w>3</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1591</x>
      <y>77</y>
      <w>37</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Renderer::TopologyRenderer
--

--
+ drawGraphic(neuralNetwork : NeuralNetwork) : Image
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1537</x>
      <y>63</y>
      <w>73</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;710.0;90.0;710.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1365</x>
      <y>81</y>
      <w>11</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;60.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1319</x>
      <y>78</y>
      <w>57</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;550.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>839</x>
      <y>453</y>
      <w>119</w>
      <h>131</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>720.0;1290.0;720.0;710.0;1170.0;710.0;1170.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>635</x>
      <y>452</y>
      <w>186</w>
      <h>113</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;1100.0;450.0;1100.0;450.0;10.0;1840.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1360</x>
      <y>49</y>
      <w>144</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>1420.0;10.0;1320.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1317</x>
      <y>326</y>
      <w>62</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>Inferencing::InferencingDistributor
{abstract}
--
- imageDirectories : string[]
- neuralNetworks : NeuralNetworkAdapter[]
- resultManager : ResultManagerAdapter 
--
+ &lt;&lt;constructor&gt;&gt; Inferencing(renderer : ResultRendrer, 
    dispatcher : Dispatcher,
    resultmanager : ResultManagerAdapter)
+ addNN(nn : NeuralNetworkAdapter) : void
+ removeNN(name : string) : void 
+ setInput(directorys : string[]) : void
+ startProcess() : void
+ setSettings(setting : Setting) : void
+ getSettings() : Setting
+ saveResult(neuralnetworkID : int, inputID : int): void
+ getResult(neuralnetworkID : int, inputID : int): Result
+ drawResult(neuralnetworkID : int, inputID : int): void
/- drawResult() : void /
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>320</y>
      <w>51</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>Inferencing::NeuralNetworkSetter
--
- model : ModelFacade
--
+ &lt;&lt;constructor&gt;&gt; NeuralNetworkSetter(distributor : InterferencingDistributor)
+ setNeuralNetwork(directory : string): void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1306</x>
      <y>326</y>
      <w>13</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>372</y>
      <w>52</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>Inferencing::PlatformSetter
--
- checkboxes : list&lt;checkbox&gt;
--
&lt;&lt;constructor&gt;&gt; + PlatformSetter(checkboxes : list&lt;checkbox&gt;, 
						distributor : InferencingDistributor)
+ setPlatform() : void
+ setPlatform(platforms : list&lt;string&gt;) . void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1307</x>
      <y>326</y>
      <w>12</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;60.0;10.0;60.0;530.0;10.0;530.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>390</y>
      <w>52</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>Inferencing::ModeCalculator
--

--
&lt;&lt;constructor&gt;&gt; + ModeCalculator()
+ setMode() : void
- calculateOptimal() : list&lt;String&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>387</y>
      <w>3</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1317</x>
      <y>365</y>
      <w>28</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Inferencing::
InferencingDistributorClassification
--
-drawResult() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1351</x>
      <y>365</y>
      <w>28</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Inferencing::
InferencingDistributorDetection
--
- boxthreshold : int
--
- drawResult() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1329</x>
      <y>359</y>
      <w>20</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;30.0;10.0;30.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1346</x>
      <y>359</y>
      <w>20</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;180.0;30.0;180.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>335</y>
      <w>51</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Inferencing::Pager
--
- currentinput : image
- prevnnbutton : button
- nextnnbutton : buton
- maxImage : image 
- previmagebutton : button
- nextimagebutton : button
--
&lt;&lt;constructor&gt;&gt; + Pager(prevNeuralNetworkButton : button, 
			nextNeuralNetworkButton : button,
			prevImageButton : button,
			nextImageButton : button)
+ nextImage() : void 
+ prevImage() : void
+ nextNeuralNetwork() : void
+ prevNeuralNetwork() : void 
+ saveResult() : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1306</x>
      <y>326</y>
      <w>13</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;70.0;10.0;70.0;170.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1389</x>
      <y>326</y>
      <w>35</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Inferencing::PlatformSetting
--
- deviceList : list&lt;String&gt;
--
+ &lt;&lt;constructor&gt;&gt; PlatformSetting(devices : list&lt;String&gt;) 
+ getDeviceList() : list&lt;String&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1389</x>
      <y>340</y>
      <w>35</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>Inferencing::OutputSetting
--
- showResults : bool
- saveResults : bool
--
+ &lt;&lt;constructor&gt;&gt; OutputSetting(showResults : bool,
    saveResults : bool)
+ showResultsEnabled() : bool
+ saveResultsEnabled() : bool </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1378</x>
      <y>334</y>
      <w>13</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;90.0;80.0;90.0;80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1378</x>
      <y>328</y>
      <w>13</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;80.0;10.0;80.0;50.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1375</x>
      <y>183</y>
      <w>33</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Controller::ControllerFacade
--
- trainer : Trainer
--
+ &lt;&lt;constructor&gt;&gt; Controllerfacade()
+ startProcess() : void
+ saveResults() : void
+ nextNeuralNetwork() : void
+ prevNeuralNetwork() : void
+ nextImage() : void
+ prevImage() : void
+ startTraining() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1379</x>
      <y>244</y>
      <w>23</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
StartHandler
--

--
- startProcess() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1266</x>
      <y>244</y>
      <w>23</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
NextPrevHandler
{abstract}
--

--
&lt;&lt;constructor&gt;&gt;+ NextPrevHandler(pager : Pager)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1255</x>
      <y>261</y>
      <w>21</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
PrevHandler
--
--
- prev() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1278</x>
      <y>261</y>
      <w>21</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
NextHandler
--
--
- next() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1265</x>
      <y>254</y>
      <w>14</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;120.0;40.0;10.0;40.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1276</x>
      <y>254</y>
      <w>15</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;130.0;40.0;130.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1408</x>
      <y>244</y>
      <w>23</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
SaveResultHandler
--


--
- fetchResults() : void
- saveResults() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1313</x>
      <y>244</y>
      <w>23</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
FileExplorerHandler
{abstract}
--
- fileexplorer : Fileexplorer
- filetypes : string[]
--
&lt;&lt;construcotr&gt;&gt;&gt; + FileExplorerHandler(inputtypes : string[])
- fetchDirectory() : string
- sendDirectory() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1300</x>
      <y>264</y>
      <w>23</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
InputImageHandler
--

--
- getInputOption() : void
- setInput() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1311</x>
      <y>259</y>
      <w>15</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;130.0;30.0;10.0;30.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1346</x>
      <y>228</y>
      <w>21</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
EventHandler
{abstract}
--
--
+ onAction() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1324</x>
      <y>236</y>
      <w>34</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>320.0;10.0;320.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1276</x>
      <y>236</y>
      <w>82</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>800.0;10.0;800.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1355</x>
      <y>236</y>
      <w>66</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;640.0;50.0;640.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1355</x>
      <y>236</y>
      <w>37</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;350.0;50.0;350.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1325</x>
      <y>264</y>
      <w>23</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
NeuralNetworkHandler
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1323</x>
      <y>259</y>
      <w>15</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;130.0;30.0;130.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1355</x>
      <y>244</y>
      <w>21</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
MainHandler
--
- view : ViewFacade
--
+ main(String[] args) : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1355</x>
      <y>236</y>
      <w>13</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;110.0;50.0;110.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1098</x>
      <y>472</y>
      <w>58</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkModelAdapter::NeuralNetworkAdapter

--

--
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork()
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork(name : string)
+ addLayer(layer : NetworkLayer)
+ getFirstLayer() : NetworkLayer
+ getLastLayer() : NetworkLayer
+ getNextLayer() : NetworkLayer
+ getPreviousLayer() : NetworkLayer
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1167</x>
      <y>389</y>
      <w>56</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Resultadapter::ResultsmanagerAdapter
--

--
&lt;&lt;constructor&gt;&gt; + ResultAdapter()
+ getNeuralNetworkList(): list&lt;NeuralNetwork&gt;
+ getImageList() : list&lt;image&gt;
+ getResults() : list&lt;NeuralNetwork,image,result)
+ getResultsPerNeuralNetwork(neuralNetwork : NeuralNetwork) : list&lt;Image,Result&gt;
+ getResultsPerImage(image : image): list&lt;NeuralNetwork,Result&gt;
+ getResult(image : image,neuralNetwork : NeuralNetwork): Result
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1407</x>
      <y>80</y>
      <w>14</w>
      <h>106</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;1040.0;120.0;1040.0;120.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1335</x>
      <y>251</y>
      <w>20</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>170.0;750.0;170.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>803</x>
      <y>265</y>
      <w>563</w>
      <h>186</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;1840.0;10.0;1840.0;20.0;510.0;5610.0;510.0;5610.0;10.0;5450.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1232</x>
      <y>250</y>
      <w>36</w>
      <h>89</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>240.0;860.0;10.0;860.0;10.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1351</x>
      <y>248</y>
      <w>89</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;780.0;10.0;730.0;870.0;730.0;870.0;10.0;800.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1333</x>
      <y>249</y>
      <w>103</w>
      <h>69</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;670.0;1010.0;670.0;1010.0;10.0;980.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1351</x>
      <y>248</y>
      <w>57</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;780.0;10.0;730.0;550.0;730.0;540.0;10.0;510.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1124</x>
      <y>340</y>
      <w>134</w>
      <h>134</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
currentNeuralNetwork</panel_attributes>
    <additional_attributes>10.0;1320.0;10.0;10.0;1320.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1131</x>
      <y>343</y>
      <w>128</w>
      <h>131</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
maxNeuralNetwork</panel_attributes>
    <additional_attributes>10.0;1290.0;10.0;10.0;1260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1155</x>
      <y>475</y>
      <w>456</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
testNeuralNetwork
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;10.0;280.0;990.0;4540.0;1000.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>313</x>
      <y>713</y>
      <w>39</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NeuralNetwork

--
- name : string
- currentLayer : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork()
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork(name : string)
+ addLayera(layer : NetworkLayer) : void
+ getFirstLayer() : NetworkLayer
+ getLastLayer() : NetworkLayer
+ getNextLayer() : NetworkLayer
+ getPreviousLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>425</x>
      <y>721</y>
      <w>50</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NetworkLayer

--
# name : string
# inputDimensions : int[]
--
+ setName(name : string) : void
+ setInputDimensions(inputDimensions : int[]) : void
+ getName() : string
+ getInputDimensions() : int[]
+ getTensorDimenssions() : int[]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>347</x>
      <y>750</y>
      <w>92</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionLayer

--
- weigthsTensor : double[][][][]
- stride : int
- padding : int
--
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer()
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer(name : string, inputDimensions : int[], weights : double[][][][], stride : int, padding : int)
+ setWeigthsTensor(weights : double[][][][]) : void
+ setStride(stride : int) : void
+ setPadding(padding : int) : void
+ getWeigthsTensor() : double[][][][]
+ getStride() : int
+ getPadding() : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>514</x>
      <y>750</y>
      <w>81</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingLayer

--
- type : PollingType
- size : int
- stride : int
--
+ &lt;&lt;constructor&gt;&gt; polingLayer()
+ &lt;&lt;constructor&gt;&gt; polingLayer(name : string, inputDimensions : int[], size : int, stride : int, type : PollingType)
+ setType(type : PollingType) : void
+ setSize(size : int) : void
+ setStride(stride : int) : void
+ getType() : PollingType
+ getSize() : int
+ getStride() : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>688</x>
      <y>750</y>
      <w>67</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseLayer

--
- matrix : double[][]
--
+ &lt;&lt;constructor&gt;&gt; DenseLayer()
+ &lt;&lt;constructor&gt;&gt; DenseLayer(name : string, inputDimensions : int[], matrix : double[][])
+ setMatrix(matrix : double[][]) : void
+ getMatrix() : double[][]


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1004</x>
      <y>750</y>
      <w>53</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionLayer

--
- currentChain : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; InceptionLayer()
+ &lt;&lt;constructor&gt;&gt; InceptionLayer(name : string, inputDimensions : int[])
+ addLayer_chain(chain : NeuralNetwork) : void
+ getFirstChain() : NeuralNetwork
+ getNextChain() : NeuralNetwork</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>394</x>
      <y>742</y>
      <w>635</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;6330.0;20.0;6330.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>549</x>
      <y>743</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>717</x>
      <y>743</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>448</x>
      <y>739</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>351</x>
      <y>728</y>
      <w>76</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
list &lt;layers&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;740.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>313</x>
      <y>734</y>
      <w>16</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;150.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>441</x>
      <y>750</y>
      <w>71</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationLayer

--
- function : Activation
--
+ &lt;&lt;constructor&gt;&gt; ActivationLayer()
+ &lt;&lt;constructor&gt;&gt; ActivationLayer(name : string, inputDimensions : int[], function : Activation)
+ setFunction(function : Activation) : void
+ getFunction() : Activation

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>757</x>
      <y>750</y>
      <w>50</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenLayer

--

--
+ &lt;&lt;constructor&gt;&gt; FlattenLayer()
+ &lt;&lt;constructor&gt;&gt; FlattenLayer(name : string, inputDimensions)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>809</x>
      <y>750</y>
      <w>69</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutLayer

--
- dropoutRate : float
--
+ &lt;&lt;constructor&gt;&gt; DropoutLayer()
+ &lt;&lt;constructor&gt;&gt; DropoutLayer(name : string, inputDimensions : int[], dropoutRate : float)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>470</x>
      <y>743</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>779</x>
      <y>743</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>743</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>597</x>
      <y>750</y>
      <w>89</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationLayer

--
- type : LRNType
- depth : int
--
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer()
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer(name : string, inputDimensions : int[], type : LRNType, depth : int)
+ setType(type : LRNType) : void
+ setDepth(depth : int) : void
+ getType() : LRNType
+ getDepth() : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>743</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>351</x>
      <y>714</y>
      <w>698</w>
      <h>38</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
list &lt;chains&gt;
</panel_attributes>
    <additional_attributes>6880.0;360.0;6880.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>750</y>
      <w>59</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsLayer

--

--
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer()
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer(name : string, inputDimensions : int[])</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>905</x>
      <y>743</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>746</y>
      <w>26</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::Activation

--
SIGMOID
TANH
RELU
LEAKING_RELU
PARAMETRIC_RELU
SOFTMAX
SWISH</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>765</y>
      <w>26</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::PollingType

--
MAX
AVEREAGE</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>776</y>
      <w>26</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::LRNType

--
INTER_CHANNEL
INTRA_CHANNEL</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>313</x>
      <y>748</y>
      <w>12</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;200.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>313</x>
      <y>767</y>
      <w>12</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;120.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>317</x>
      <y>807</y>
      <w>65</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DeviceNetwork

--
- platformName : string
--
+ &lt;&lt;constructor&gt;&gt; NetworkOperations()
+ &lt;&lt;constructor&gt;&gt; NetworkOperations(platformName : string)
+ addKernelCode(layerType : Layertype, kernelCode : string[]) : void
+ executeCalculation(layer : NetworkLayer, inputData : double[][][]) : double[][][]
+ executeBackPropagation(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>368</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>NeuralNetworkPkg::ConvolutionCode
{abstract}
--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>833</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>827</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>459</x>
      <y>833</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>423</x>
      <y>816</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
/NeuralNetworkPkg::DeviceNetworkLayer/
{abstract}
--
# kernelCode : string[]
--
/# setKernelCode(kernelCode : string[]) : void/
/+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>396</x>
      <y>832</y>
      <w>510</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;5080.0;20.0;5080.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>833</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>712</x>
      <y>833</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>776</x>
      <y>833</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>584</x>
      <y>833</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>833</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>279</x>
      <y>792</y>
      <w>40</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;uses&gt;&gt;
</panel_attributes>
    <additional_attributes>380.0;240.0;10.0;240.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>941</x>
      <y>750</y>
      <w>61</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageLayer

--
- outputData : double[][][]
--
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer()
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer(name : string, outputData : double[][][])
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>972</x>
      <y>743</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>787</y>
      <w>26</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::LayerType

--
CONVOLUTION
ACTIVATION
POLING
LRN
DENSE
FLATTEN
DROPOUT
COLLECT_RESULTS
INCEPTION
OUTPUT_STORAGE</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>279</x>
      <y>780</y>
      <w>11</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>279</x>
      <y>768</y>
      <w>11</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>279</x>
      <y>756</y>
      <w>11</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>381</x>
      <y>818</y>
      <w>44</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1..n
layer</panel_attributes>
    <additional_attributes>10.0;20.0;420.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>431</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>494</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>557</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>620</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>683</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>746</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>809</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>872</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>381</x>
      <y>808</y>
      <w>545</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
operations</panel_attributes>
    <additional_attributes>10.0;20.0;5430.0;20.0;5430.0;320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>322</x>
      <y>859</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeCPU

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>322</x>
      <y>874</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeFPGA

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>322</x>
      <y>889</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeGPU

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>322</x>
      <y>904</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeASIC

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>398</x>
      <y>903</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>398</x>
      <y>873</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>398</x>
      <y>858</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>398</x>
      <y>888</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>476</x>
      <y>903</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>476</x>
      <y>888</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>476</x>
      <y>873</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>476</x>
      <y>858</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>551</x>
      <y>858</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>551</x>
      <y>872</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>551</x>
      <y>887</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>551</x>
      <y>903</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>622</x>
      <y>903</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>622</x>
      <y>887</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>622</x>
      <y>872</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>622</x>
      <y>858</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>685</x>
      <y>903</y>
      <w>53</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>685</x>
      <y>887</y>
      <w>53</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>685</x>
      <y>872</y>
      <w>53</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>685</x>
      <y>858</y>
      <w>53</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>747</x>
      <y>858</y>
      <w>53</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>747</x>
      <y>887</y>
      <w>53</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>747</x>
      <y>872</y>
      <w>53</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>747</x>
      <y>903</y>
      <w>53</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>810</x>
      <y>858</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>810</x>
      <y>903</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>810</x>
      <y>887</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>810</x>
      <y>872</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>873</x>
      <y>903</y>
      <w>55</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>873</x>
      <y>887</y>
      <w>55</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>873</x>
      <y>872</y>
      <w>55</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>873</x>
      <y>858</y>
      <w>55</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>382</x>
      <y>851</y>
      <w>13</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;110.0;110.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>382</x>
      <y>851</y>
      <w>13</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;110.0;260.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>382</x>
      <y>851</y>
      <w>13</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;110.0;410.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>382</x>
      <y>851</y>
      <w>13</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;110.0;570.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>458</x>
      <y>851</y>
      <w>13</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;110.0;570.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>458</x>
      <y>851</y>
      <w>13</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;110.0;410.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>458</x>
      <y>851</y>
      <w>13</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;110.0;260.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>458</x>
      <y>851</y>
      <w>13</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;110.0;110.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>536</x>
      <y>851</y>
      <w>13</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;110.0;570.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>536</x>
      <y>851</y>
      <w>13</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;110.0;410.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>536</x>
      <y>851</y>
      <w>13</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;110.0;260.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>536</x>
      <y>851</y>
      <w>13</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;110.0;110.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>611</x>
      <y>851</y>
      <w>7</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>611</x>
      <y>851</y>
      <w>7</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>611</x>
      <y>851</y>
      <w>7</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>611</x>
      <y>851</y>
      <w>7</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>675</x>
      <y>851</y>
      <w>7</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>675</x>
      <y>851</y>
      <w>7</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>675</x>
      <y>851</y>
      <w>7</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>675</x>
      <y>851</y>
      <w>7</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>737</x>
      <y>851</y>
      <w>7</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>737</x>
      <y>851</y>
      <w>7</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>737</x>
      <y>851</y>
      <w>7</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>737</x>
      <y>851</y>
      <w>7</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>799</x>
      <y>851</y>
      <w>7</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>799</x>
      <y>851</y>
      <w>7</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>799</x>
      <y>851</y>
      <w>7</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>799</x>
      <y>851</y>
      <w>7</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>861</x>
      <y>851</y>
      <w>7</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>861</x>
      <y>851</y>
      <w>7</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>861</x>
      <y>851</y>
      <w>7</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>861</x>
      <y>851</y>
      <w>7</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>927</x>
      <y>851</y>
      <w>7</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>927</x>
      <y>851</y>
      <w>7</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>927</x>
      <y>851</y>
      <w>7</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>927</x>
      <y>851</y>
      <w>7</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>332</x>
      <y>474</y>
      <w>768</w>
      <h>241</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;2390.0;10.0;2210.0;7210.0;2190.0;7210.0;10.0;7660.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1230</x>
      <y>442</y>
      <w>102</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>
Training::Trainer

--
- inputData : IData[]
- trainingData : ResultAdapter[]
- learningRate : double
- testAccuracyGraph : double[]
- trainingAccuracyGraph : double[]
--
+ &lt;&lt;constructor&gt;&gt; Trainer(neuralNetwork : NeuralNetwork, IData[], trainingData : Result[], learningRate : double, )
+ start() : void
+ getTrainedNetwork() : NeuralNetwork
+ getTestAccuracyGraph() : double[]
+ getTrainAccuracyGraph() : double[] </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1231</x>
      <y>484</y>
      <w>102</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>
Training::SingleTrainer

--
- inputData : double[][][]
- trainingData : double[][][]
- cacheData : double[][][]
- learningRate : double
- testAccuracy : double
- trainingAccuracy : double
- trainingOperations : NetworkOperations
- calculatingOperations : NetworkOperations
--
+ &lt;&lt;constructor&gt;&gt; SingleTrainer(learningRate : double, trainingOperations : NetworkOperations, calculatingOperations : NetworkOperations)
+ init(neuralNetwork : NeuralNetwork, inputData : double[][][], trainingData : double[][][]) : void
- calculateLayer(layer : NetworkLayer, inputData : double[][][]) : double [][][]
- calculateResults() : void
- trainLayer(layer : NetworkLayer, data : double[][][][]) : NetworkLayer
- performTraining() : void
+ train() : NeuralNetwork
+ getTestAccuracy() : double
+ getTrainAccuracy() : double</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1275</x>
      <y>468</y>
      <w>11</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
singleTrainer</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1366</x>
      <y>187</y>
      <w>23</w>
      <h>47</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=3
m2=1


resultHandler
inputHandler
neuralNetworkHandler</panel_attributes>
    <additional_attributes>10.0;440.0;70.0;440.0;70.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1354</x>
      <y>187</y>
      <w>101</w>
      <h>141</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
distributor</panel_attributes>
    <additional_attributes>10.0;1390.0;10.0;1360.0;990.0;1360.0;980.0;10.0;540.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1155</x>
      <y>451</y>
      <w>77</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=2
neuralNetwork
trainedNetwork
</panel_attributes>
    <additional_attributes>10.0;210.0;290.0;210.0;290.0;10.0;750.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1155</x>
      <y>473</y>
      <w>78</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=3
neuralNetwork
internalResults
trainedNetwork
</panel_attributes>
    <additional_attributes>10.0;10.0;640.0;10.0;640.0;260.0;760.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1378</x>
      <y>20</y>
      <w>323</w>
      <h>365</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>320.0;10.0;3210.0;10.0;3210.0;3610.0;60.0;3630.0;60.0;3170.0;10.0;3170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>936</x>
      <y>840</y>
      <w>61</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>938</x>
      <y>858</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>938</x>
      <y>872</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>938</x>
      <y>887</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>938</x>
      <y>903</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>923</x>
      <y>808</y>
      <w>46</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;20.0;440.0;20.0;440.0;320.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>991</x>
      <y>851</y>
      <w>7</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>991</x>
      <y>851</y>
      <w>7</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>991</x>
      <y>851</y>
      <w>7</w>
      <h>43</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>991</x>
      <y>851</y>
      <w>7</w>
      <h>59</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>978</x>
      <y>336</y>
      <w>51</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>ResultModel::ResultManager
--
- resultList : List&lt;Result&gt;
- neuralNetworkMap : map&lt;string , Result&gt;
- imageMap : map&lt;string , Result&gt;
--
+ &lt;&lt;constructor&gt;&gt; ResultManager(resultList : list&lt;Result&gt;)
+ getResultsByImage(imageID : string) : list&lt;Result&gt;
+ getResultsByNeuralNetwork(neuralNetworkID : string) : list&lt;Result&gt;
+ getSingleResult(imageID : string, neuralNetworkID : string) : Result
+ addResult(result : Result) : void
+ addResults(results : list&lt;Result&gt;) : void
- organizeResults(result : Results) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>917</x>
      <y>337</y>
      <w>48</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>ResultModel::Result
--
- imageID : string
- neuralNetworkID : string
--
+ &lt;&lt;constructor&gt;&gt; Result(imageID : string, neuralNetworkID : string)
+ GetImageID() : string
+ GetNeuralNetworkID() : string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>879</x>
      <y>417</y>
      <w>45</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>ResultModel:ClassProbability
--
- className : string
- probability : float
--
+ &lt;&lt;constructor&gt;&gt; NetworkPredicition( name : string, probability : float)
+ getClassName() : string
+ getProbability() : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>877</x>
      <y>378</y>
      <w>76</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>ResultModel::DetectionResult
--

--
+ &lt;&lt;constructor&gt;&gt; DetectionResult(imageID : string, neuralNetworkID : string, boundingBox : BoundingBox)
+ getBoundingBoxes() : list&lt;BoundingBox&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>909</x>
      <y>357</y>
      <w>31</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;290.0;110.0;10.0;110.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>826</x>
      <y>382</y>
      <w>45</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>ResultModel::BoundingBox
--
- x : float
- y : float
- width : float
- height : float
--
+ &lt;&lt;constructor&gt;&gt; BoundingBox( x : float, y : float, width : float, height : float)
+ getX() : float
+ getY() : float
+ getWidth() : float
+ getHeight() : float
+ getProbabilities() : list&lt;ClassProbabilities&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>954</x>
      <y>378</y>
      <w>61</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>ResultModel::ClassificationResult
--

--
+ &lt;&lt;constructor&gt;&gt; ClassificationResultModel(imageID : string, neuralNetworkID : string)
+ GetProbablities() : list&lt;ClassProbalities&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>937</x>
      <y>357</y>
      <w>41</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0;390.0;110.0;390.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>383</y>
      <w>9</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>819</x>
      <y>392</y>
      <w>62</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>600.0;270.0;10.0;270.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>923</x>
      <y>398</y>
      <w>68</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>10.0;210.0;660.0;210.0;660.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1028</x>
      <y>336</y>
      <w>141</w>
      <h>58</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
resultManager</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0;170.0;550.0;1390.0;560.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1379</x>
      <y>462</y>
      <w>45</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>Dispatcher::DispatchManager
--
_- dispatcher : DispatchManager_
- mode : Mode
- deviceList : list&lt;Device&gt;
- deviceChannelMap : map&lt;(Device, Channel)&gt;
--
- &lt;&lt;Constructor&gt;&gt; DispatchManager()
_+ getInstance() : DispatchManager_
+ setMode(operatingMode : Mode) : void
+ getMode() : Mode
+ getModeList() : list&lt;Mode&gt;
+ setNeuralNetworkList(list&lt;NeuralNetwork&gt; : void
+ getNeuralNetworkList() : list&lt;NeuralNetwork&gt;
+ dispatchImages(imageList : list&lt;Image&gt;) : Resultmanager
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1408</x>
      <y>433</y>
      <w>53</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Dispatcher::Mode
--
- modeName: string
- deviceList : list&lt;Device&gt;
- neuralNetworkList : list&lt;NeuralNetwork&gt;
--
+ &lt;&lt;constructor&gt;&gt; Mode()
+ getModeName() : string
+ setAllowedDeviceList(deviceList : list&lt;Device&gt;) : void
+ setNeuralNetworkList(neuralNetworkList : list&lt;NeuralNetwork&gt;) : void
+ setImageList(imageList : list&lt;image&gt;) : void
/+ distributeImages() : ResultManager/
/# calculate(deviceList : list&lt;Device&gt;) : (float, float)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1429</x>
      <y>485</y>
      <w>26</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Dispatcher::Device
--
- name : string
- type : string
- ram : long
- performance : double
--
+ &lt;&lt;constructor&gt;&gt; Device()
+ getType() : string
+ getName() : string
+ getRAM() : long
+ getPerformance() : double</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1468</x>
      <y>444</y>
      <w>53</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>Dispatcher::HighPerformanceMode
--
- modeName : string
--
+ distributeImages() : ResultManager
# calculate(deviceList : list&lt;Device&gt;) : (float, float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1468</x>
      <y>454</y>
      <w>53</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>Dispatcher::HighEfficiencyMode
--
- modeName : string
--
+ distributeImages() : ResultManager
# calculate(deviceList : list&lt;Device&gt;) : (float, float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1468</x>
      <y>463</y>
      <w>53</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>Dispatcher::LowPowerMode
--
- modeName : string
--
+ distributeImages() : ResultManager
# calculate(deviceList : list&lt;Device&gt;) : (float, float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1467</x>
      <y>516</y>
      <w>29</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Dispatcher::FPGADevice
--
- name : string
- type : string
- ram : long
- performance : double
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1438</x>
      <y>516</y>
      <w>29</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Dispatcher::ASICDevice
--
- name : string
- type : string
- ram : long
- performance : double
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1408</x>
      <y>516</y>
      <w>30</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Dispatcher::CPUDevice
--
- name : string
- type : string
- ram : long
- performance : double
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1380</x>
      <y>516</y>
      <w>28</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Dispatcher::GPUDevice
--
- name : string
- type : string
- ram : long
- performance : double
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1421</x>
      <y>453</y>
      <w>49</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;420.0;70.0;420.0;30.0;470.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1421</x>
      <y>453</y>
      <w>49</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;420.0;70.0;420.0;120.0;470.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1421</x>
      <y>446</y>
      <w>49</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;140.0;420.0;140.0;420.0;10.0;470.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1397</x>
      <y>504</y>
      <w>43</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>410.0;10.0;410.0;70.0;10.0;70.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1426</x>
      <y>504</y>
      <w>14</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;120.0;70.0;10.0;70.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1437</x>
      <y>504</y>
      <w>46</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;440.0;70.0;440.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1437</x>
      <y>504</y>
      <w>13</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;110.0;70.0;110.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1371</x>
      <y>340</y>
      <w>13</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>80.0;1270.0;10.0;1270.0;10.0;950.0;110.0;950.0;110.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1550</x>
      <y>433</y>
      <w>68</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Communication::Channel
--
- deviceHandler : Device
- NeuralNetworkList : list&lt;NeuralNetwork&gt;
- ImageList : list&lt;image&gt;
--
+ &lt;&lt;Constructor&gt;&gt; Channel(connectedDevice : Device)
+ &lt;&lt;Constructor&gt;&gt; Channel(connectedDevice : Device, neuralNetworkList : list&lt;NeuralNetwork&gt;)
+ setNeuralNetworkList(neuralNetworkList : list&lt;NeuralNetwork&gt;) : void
/+ sendImageList(imageList : list&lt;image&gt;) : Result/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1646</x>
      <y>440</y>
      <w>42</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Communication::GPUChannel
--

--
+ sendImageList(imageList : list&lt;image&gt;) : Result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1646</x>
      <y>431</y>
      <w>42</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Communication::CPUChannel
--

--
+ sendImageList(imageList : list&lt;image&gt;) : Result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1646</x>
      <y>449</y>
      <w>42</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Communication::FPGAChannel
--

--
+ sendImageList(imageList : list&lt;image&gt;) : Result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1646</x>
      <y>458</y>
      <w>42</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Communication::ASICChannel
--

--
+ sendImageList(imageList : list&lt;image&gt;) : Result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1568</x>
      <y>449</y>
      <w>80</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0;700.0;170.0;700.0;100.0;780.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1568</x>
      <y>449</y>
      <w>80</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0;700.0;170.0;700.0;10.0;780.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1554</x>
      <y>494</y>
      <w>68</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Communication::AbstractFactory
--

--
/getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1636</x>
      <y>495</y>
      <w>53</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Communication::ConcreteFactoryASIC
--

--
getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1636</x>
      <y>475</y>
      <w>53</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Communication::ConcreteFactoryFPGA
--

--
getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1636</x>
      <y>506</y>
      <w>53</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Communication::ConcreteFactoryGPU
--

--
getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1636</x>
      <y>485</y>
      <w>53</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Communication::ConcreteFactoryCPU
--

--
getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1568</x>
      <y>440</y>
      <w>80</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;260.0;700.0;260.0;700.0;10.0;780.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1568</x>
      <y>431</y>
      <w>80</w>
      <h>37</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;350.0;700.0;350.0;700.0;10.0;780.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1621</x>
      <y>475</y>
      <w>17</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;210.0;40.0;210.0;40.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1621</x>
      <y>485</y>
      <w>17</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;40.0;110.0;40.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1621</x>
      <y>495</y>
      <w>17</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1621</x>
      <y>495</y>
      <w>17</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0;40.0;120.0;150.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1543</x>
      <y>435</y>
      <w>13</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;610.0;10.0;610.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1460</x>
      <y>433</y>
      <w>92</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>900.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>223</x>
      <y>347</y>
      <w>21</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>Parser::IParser
{abstract}
--

--
/+ parse(toParse : string), E /
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>223</x>
      <y>401</y>
      <w>21</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Parser::ImageLocationsParser
--

--
# parse(splittedText : string[]) : E</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>193</x>
      <y>401</y>
      <w>27</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Parser::NeuralNetworkParser
--

--
# parse(splittedText : string[]) : E</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>166</x>
      <y>401</y>
      <w>21</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Parser::LayerParser
--

--
# parse(splittedText : string[]) : E</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>429</y>
      <w>28</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Parser::SingleDetectionDatasetParser
--

--
+ parse(toParse: string), DetectionData</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>249</x>
      <y>428</y>
      <w>26</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Parser::DetectionDatasetParser
--

--
+ parse(splittedText : string[], images : image[]) : Detecttiondataset
+ par</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>218</x>
      <y>371</y>
      <w>33</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Parser::LineBreakParser
{abstract}
--

--
+ parse(toParse : string) : E
# splitIntoLines(text : string) : string[]
# splitBySymbol(string text, char symbol) . string[]
/# parse(splittedText : string[]) : E/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>271</x>
      <y>401</y>
      <w>29</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Parser::ClassificationResultParser
--

--
+ parse(toParse : string), ClassificationResult </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>232</x>
      <y>357</y>
      <w>3</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>232</x>
      <y>389</y>
      <w>3</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>232</x>
      <y>394</y>
      <w>29</w>
      <h>36</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;270.0;20.0;270.0;340.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>206</x>
      <y>394</y>
      <w>29</w>
      <h>9</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>270.0;20.0;10.0;20.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>175</x>
      <y>394</y>
      <w>34</w>
      <h>9</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>320.0;20.0;10.0;20.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>360</y>
      <w>85</w>
      <h>71</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>830.0;20.0;10.0;20.0;10.0;690.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>229</x>
      <y>360</y>
      <w>59</w>
      <h>43</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;570.0;20.0;570.0;410.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>167</x>
      <y>430</y>
      <w>84</w>
      <h>4</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;820.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>88</x>
      <y>403</y>
      <w>46</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Parser::ImageParser
{abstract}
--
width : int
height : int
channelNumb : int
--
&lt;&lt;consturctor&gt;&gt; + ImageParser(width : int, height : int, channelNumb : int)
+ parse(image : int[]), image
/# resize(image : int[], width : int, height : int, channelnumb : int), int[]/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>306</x>
      <y>401</y>
      <w>28</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Parser::DetectionResultParser
--

--
+ parse(toParse : string): DetectionResult</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>264</x>
      <y>360</y>
      <w>59</w>
      <h>43</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;570.0;20.0;570.0;410.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>111</x>
      <y>360</y>
      <w>85</w>
      <h>45</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>830.0;20.0;10.0;20.0;10.0;430.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>265</x>
      <y>482</y>
      <w>51</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::NeuralNetworkFactory
--

--
_+ buildNeuralNetwork(layers : list&lt;NetworkLayer&gt;) : NeuralNetwork_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>508</y>
      <w>57</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>Parser::PoolingLayerFactory
--
- padding : int
- stride : int
- tensors : double[][][]
--
+ buildLayer() : NetworkLayer
+ setWeightTensor(tensors : double[][][]) : PoolingLayer
+ setStride(stride : int) : PoolingLayer
+ setPadding(padding : int) : PoolingLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>129</x>
      <y>508</y>
      <w>57</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::ActivationLayerFactory
--
- function : Activation
--
+ buildLayer() : NetworkLayer
+ setActivation(function : Activation) : ActivationLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>102</x>
      <y>479</y>
      <w>57</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Parser::LayerFactory
{abstract}
--
- inputDimension : int
--
/+ buildLayer() : NetworkLayer/
+ setInputDimension(dimension : int) : LayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>97</x>
      <y>497</y>
      <w>34</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>320.0;10.0;320.0;50.0;10.0;50.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>128</x>
      <y>497</y>
      <w>32</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;300.0;50.0;300.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>181</x>
      <y>482</y>
      <w>82</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Parser::ClassificationResultFactory
--

--
_+ buildClassificationResult(imageID : string, neuralNetworkID : string, probabilities : float[]) : ClassificationResult _
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>181</x>
      <y>468</y>
      <w>82</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Parser::DetectionResultFactory
--

--
_+ buildDetectionResult(imageID : string, neuralNetworkID : string, boundingBoxes : list&lt;BoundingBox&gt;) : ClassificationResult _
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>265</x>
      <y>468</y>
      <w>51</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::BoundingBoxFactory
--

--
_+ buildBoundingBox(x : float, y : float, width : float, _
_height : float, probabilities : list&lt;Probabilities&gt;) : BoundingBox_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>348</x>
      <y>401</y>
      <w>28</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Parser::ProbabilityParser
--

--
+ parse(toParse : string): DetectionResult</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>297</x>
      <y>360</y>
      <w>67</w>
      <h>43</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;650.0;20.0;650.0;410.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>246</x>
      <y>335</y>
      <w>19</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Generic abstract parser</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>339</y>
      <w>12</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;90.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>43</x>
      <y>429</y>
      <w>43</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Parser::ImageParserWithCropping
{}
--

--
&lt;&lt;consturctor&gt;&gt; + ImageParserWithCropping
                          (width : int, height : int, channelNumb : int)
- resize(image : int[], width : int, height : int, channelnumb : int), int[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>91</x>
      <y>429</y>
      <w>43</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>Parser::ImageParserWithPadding
{}
--

--
&lt;&lt;consturctor&gt;&gt; + ImageParserWithPadding
                          (width : int, height : int, channelNumb : int)
- resize(image : int[], width : int, height : int, channelnumb : int), int[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>111</x>
      <y>421</y>
      <w>3</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>63</x>
      <y>421</y>
      <w>51</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>490.0;10.0;490.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>260</x>
      <y>365</y>
      <w>19</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>One abstraction layer deeper
parses all input with 
line breaks</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>247</x>
      <y>370</y>
      <w>16</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;30.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>51</x>
      <y>483</y>
      <w>22</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Factories for encapsulate the 
creating of the concrete objects
from the input parsing</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>189</x>
      <y>508</y>
      <w>57</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>Parser::PollingLayerFactory
--
- type : PollingType
- size : int
- stride : int
--
+ buildLayer() : NetworkLayer
+ setPollingType(type : PollingType) : PollingLayerFactory
+ setSize(size : int) PollingLayerFactory
+ setStride(stride : int) : PollingLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>248</x>
      <y>508</y>
      <w>57</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>Parser::LocalResponseNormalizationLayerFactory
--
- type : LRNType
- depth : int
--
+ buildLayer() : NetworkLayer
+ setType(type : LRNType) : LocalResponseNormalizationLayerFactory
+ setDepth(depth : int) : LocalResponseNormalizationLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>309</x>
      <y>508</y>
      <w>57</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::DenseLayerFactory
--
- matrix : double[][]
--
+ buildLayer() : NetworkLayer
+ setMatrix(amtrix : double[][]) : DenseLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>368</x>
      <y>508</y>
      <w>57</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::FlattenLayerFactory
--

--
+ buildLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>428</x>
      <y>508</y>
      <w>57</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::DropoutLayerFactory
--
- dropoutRate : float
--
+ buildLayer() : NetworkLayer
+ setDropoutRate(dorupoutRate : float) : DropoutLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>489</x>
      <y>508</y>
      <w>57</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::CollectResultsLayerFactory
--

--
+ buildLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>549</x>
      <y>508</y>
      <w>57</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::OutputStorageLayerFactory
--
- outputData : double[][][]
--
+ buildLayer() : NetworkLayer
+ setOuputData(outputData . double[][][]) : OutputStorageLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>609</x>
      <y>508</y>
      <w>57</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>Parser::InceptionLayerFactory
--

--
+ buildLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>157</x>
      <y>500</y>
      <w>64</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>213</x>
      <y>500</y>
      <w>64</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>272</x>
      <y>500</y>
      <w>64</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>333</x>
      <y>500</y>
      <w>64</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>393</x>
      <y>500</y>
      <w>64</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>454</x>
      <y>500</y>
      <w>69</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;670.0;20.0;670.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>507</x>
      <y>500</y>
      <w>69</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;670.0;20.0;670.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>571</x>
      <y>500</y>
      <w>69</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;670.0;20.0;670.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>243</x>
      <y>348</y>
      <w>578</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;2670.0;10.0;2660.0;1030.0;5760.0;1030.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1554</x>
      <y>633</y>
      <w>31</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>Prediction::FPGAPerformancePredictor
--

--
&lt;&lt;constructor&gt;&gt; + FPGAPerformancePredictor() 
# calculatePerformance(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1554</x>
      <y>604</y>
      <w>31</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>Prediction::SinglePerformancePredictor
{abstract}
--

--
+ predict(deviceID : string): float
/# openCommunication(deviceID : string) : bool/
/# calculatePerformance(deviceID : string) : float/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1565</x>
      <y>622</y>
      <w>3</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1658</x>
      <y>597</y>
      <w>28</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Prediction::PerformancePredictorFromFile
--
- path : string
--
+ predict(ids : string[]): map&lt;string, float&gt;
- loadFromFile() : string[]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1609</x>
      <y>572</y>
      <w>28</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Prediction::Predictor
{abstract}
--

--
/+ predict(ids : string[]): map&lt;string, float&gt;/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1588</x>
      <y>633</y>
      <w>31</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>Prediction::CPUPerformancePredictor
--

--
&lt;&lt;constructor&gt;&gt; + CPUPerformancePredictor() 
# calculatePerformance(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1621</x>
      <y>633</y>
      <w>31</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>Prediction::GPUPerformancePredictor
--

--
&lt;&lt;constructor&gt;&gt; + GPUPerformancePredictor() 
# calculatePerformance(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1654</x>
      <y>633</y>
      <w>31</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>Prediction::ASICPerformancePredictor
--

--
&lt;&lt;constructor&gt;&gt; + ASICPerformancePredictor() 
# calculatePerformance(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1565</x>
      <y>622</y>
      <w>42</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;400.0;50.0;400.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1565</x>
      <y>622</y>
      <w>72</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;700.0;50.0;700.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1565</x>
      <y>622</y>
      <w>107</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;1050.0;50.0;1050.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1534</x>
      <y>591</y>
      <w>19</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Predict for a single device 
performance
Uses a prototype function</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1547</x>
      <y>594</y>
      <w>10</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1628</x>
      <y>597</y>
      <w>28</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Prediction::PowerPredictorFromFile
--
- path : string
--
+ predict(ids : string[]): map&lt;string, float&gt;
- loadFromFile() : string[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1657</x>
      <y>615</y>
      <w>28</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>Prediction::CurrentPerformancePredictor
--

--
+ predict(): map&lt;string, float&gt;
- updateFile(valuePairs : map&lt;string, float&gt;) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1621</x>
      <y>580</y>
      <w>22</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;200.0;100.0;200.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1621</x>
      <y>580</y>
      <w>53</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;510.0;100.0;510.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1584</x>
      <y>606</y>
      <w>75</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;10.0;200.0;120.0;730.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1639</x>
      <y>560</y>
      <w>19</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Is responsible to provide
the predicted hardware data
for each device</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1633</x>
      <y>565</y>
      <w>15</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1671</x>
      <y>605</y>
      <w>3</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1684</x>
      <y>599</y>
      <w>11</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;90.0;190.0;90.0;10.0;20.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1533</x>
      <y>555</y>
      <w>163</w>
      <h>103</h>
    </coordinates>
    <panel_attributes>Predictor
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1365</x>
      <y>423</y>
      <w>163</w>
      <h>111</h>
    </coordinates>
    <panel_attributes>Dispatcher
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1540</x>
      <y>421</y>
      <w>163</w>
      <h>103</h>
    </coordinates>
    <panel_attributes>Communication
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1194</x>
      <y>430</y>
      <w>163</w>
      <h>103</h>
    </coordinates>
    <panel_attributes>Training
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1246</x>
      <y>305</y>
      <w>189</w>
      <h>103</h>
    </coordinates>
    <panel_attributes>Inferencing
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1249</x>
      <y>220</y>
      <w>197</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>EventHandlerModule
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1361</x>
      <y>173</y>
      <w>68</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>ControllerFacade
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1489</x>
      <y>36</y>
      <w>179</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Renderer
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1239</x>
      <y>0</y>
      <w>436</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Pages
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1086</x>
      <y>458</y>
      <w>82</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>NeuralNetworkAdapter
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1160</x>
      <y>377</y>
      <w>68</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>ResultAdapter
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>813</x>
      <y>325</y>
      <w>222</w>
      <h>118</h>
    </coordinates>
    <panel_attributes>ResultModel
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>700</x>
      <y>441</y>
      <w>255</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>ModelFacade
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>25</x>
      <y>309</y>
      <w>649</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Parser
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>454</x>
      <y>536</y>
      <w>220</w>
      <h>124</h>
    </coordinates>
    <panel_attributes>VideoHandler
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>688</x>
      <y>550</y>
      <w>324</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>IO
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>274</x>
      <y>663</y>
      <w>787</w>
      <h>271</h>
    </coordinates>
    <panel_attributes>NeuralNetworkPkg
fontsize=35</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1077</x>
      <y>161</y>
      <w>705</w>
      <h>518</h>
    </coordinates>
    <panel_attributes>Controller
fontsize=40</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>278</y>
      <w>1087</w>
      <h>665</h>
    </coordinates>
    <panel_attributes>Model
fontsize=40</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
