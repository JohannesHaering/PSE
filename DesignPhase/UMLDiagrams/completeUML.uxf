<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5045</x>
      <y>2815</y>
      <w>175</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
I/O::FileIO
--
- singleton, FileIO
- sileStream, fileStream
--
- fileIO(), FileIO
/+ readFile(filePath : string), IData/
/+ writeFile(filePath : string, data : IData), boolean/
+ getInstance(), IFileIO
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4900</x>
      <y>2985</y>
      <w>225</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>I/O::TextFileIO
--

--
+ readFile(filePath : string), IData
+ writeStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5175</x>
      <y>3085</y>
      <w>185</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>I/O::MultipleImageFileIO
--

--
+ ReadFile(filePaths : string[]), IData
+ WriteStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5005</x>
      <y>2905</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>240.0;10.0;240.0;70.0;10.0;70.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4900</x>
      <y>3085</y>
      <w>235</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>I/O::MultipleTextFileIO
--

--
+ readFile(filePath : string), IData
+ writeStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5005</x>
      <y>3045</y>
      <w>15</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5175</x>
      <y>2985</y>
      <w>185</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>I/O::ImageFileIO
--

--
+ readFile(filePath : string), IData
+ writeStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5265</x>
      <y>3045</y>
      <w>15</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5110</x>
      <y>2930</y>
      <w>170</w>
      <h>65</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;320.0;20.0;320.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5390</x>
      <y>2985</y>
      <w>190</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>I/O::VideoFileIO
--

--
+ readFile(filePath : string), IData
+ writeStream(filePath : string, data : IData) : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5265</x>
      <y>2930</y>
      <w>235</w>
      <h>65</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;450.0;20.0;450.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4385</x>
      <y>2835</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
I/O::Data
--

--
/+ getData(), E/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4470</x>
      <y>2980</y>
      <w>175</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>I/Oge::MultipleImageData
--
- data : image[]
--
&lt;&lt;constructor&gt;&gt; + MultipleimageData(data : image[])
+ getData(), image[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4660</x>
      <y>2980</y>
      <w>150</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>I/O::VideoData
--
- video : Video
--
&lt;&lt;constructor&gt;&gt; + VideoData(data : video)
+ getData(), video</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3960</x>
      <y>2980</y>
      <w>160</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>I/O::MultipleStringData
--
- stringData : string
--
&lt;&lt;constructor&gt;&gt; + MultipleStringData(data : string[])
+ getData(), string[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4135</x>
      <y>2980</y>
      <w>150</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>I/O::StringData
--
- stringData : string
--
&lt;&lt;constructor&gt;&gt; + StringData(data : string)
+ getData(), string
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4310</x>
      <y>2980</y>
      <w>140</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>I/O::ImageData
--
- imageData : Image
--
&lt;&lt;constructor&gt;&gt; + ImageData(data : image)
+ getData(), image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4225</x>
      <y>2925</y>
      <w>220</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>420.0;10.0;420.0;70.0;10.0;70.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4360</x>
      <y>2955</y>
      <w>15</w>
      <h>35</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4430</x>
      <y>2950</y>
      <w>300</w>
      <h>40</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;580.0;20.0;580.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4055</x>
      <y>2925</y>
      <w>390</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>760.0;10.0;760.0;70.0;10.0;70.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4430</x>
      <y>2925</y>
      <w>130</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;240.0;70.0;240.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>4245</x>
      <y>2795</y>
      <w>90</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Stores the abstractly 
and independently 
from the file I/O</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4315</x>
      <y>2815</y>
      <w>100</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>5265</x>
      <y>2765</y>
      <w>90</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Generic abstract IO class
The inherited classes
implement the concrete IO
for the concrete classes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5205</x>
      <y>2800</y>
      <w>80</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4730</x>
      <y>2280</y>
      <w>295</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>ModelFacade::ImageFacade
--

--
+ getImage(filePath : string, width : int, height : int, channelNumb : int) : int[]
+ getImages(filePaths : string[], width : int, height : int, channelNumb : int) : int[][]
+ getImagesFromTxtFile(filePath : string, width : int, height : int, channelNumb : int) : int[][]
+ getImageFromCamera(deviceId : int, width : int, height : int, channelNumb : int) : int[]
+ getImagesFromVideo(filePath : string, width : int, height : int, channelNumb : int) : int[][] 


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4665</x>
      <y>2140</y>
      <w>105</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>ModelFacade::Facade
{abstract}
--
- fileIO : FileIO
- parser : Parser
- videoHandler : VideoHandler
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4415</x>
      <y>2280</y>
      <w>300</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>ModelFacade::DetectionDatasetFacade
--

--
+ loadDataset(directory : string, width : int, height : int, channelNumb : int) : DetectionDatset</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4075</x>
      <y>2280</y>
      <w>310</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>ModelFacade::ClassificationDatasetFacade
--

--
+ loadDataset(directory : string, width : int, height : int, channelNumb : int) : ClassificationDataset
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5035</x>
      <y>2280</y>
      <w>240</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>ModelFacade::ParseResultFacade
--

--
+ parseClassificationResult(resultString : string) : ClassificatiomResult
+ parseDetectionResult(resultString : string) : DetectionResult</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4230</x>
      <y>2200</y>
      <w>500</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>980.0;10.0;980.0;100.0;10.0;100.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4715</x>
      <y>2200</y>
      <w>450</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;880.0;100.0;880.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4545</x>
      <y>2200</y>
      <w>185</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>350.0;10.0;350.0;100.0;10.0;100.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4715</x>
      <y>2200</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;300.0;100.0;300.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3230</x>
      <y>2985</y>
      <w>220</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>VideoHandler::IVideoCutter
{abstract}
--

--
/+ cutIntoFrames(stream : VideoStream, frameInterval : int) : Image[]/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3585</x>
      <y>2855</y>
      <w>165</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>VideoHandler::CameraHandler
--
deviceId : int
timeout : int
frameInterval : int
--
&lt;&lt;construcotr&gt;&gt; + CameraHandler(deviceId : int, timeout : int)
+ getNextFrame() : image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3585</x>
      <y>2990</y>
      <w>160</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>VideoHandler::IVideoHandler
{abstract}
--
FrameInterval : int
--
/+ handleVideo(stream : VideoStream) : Image[]/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3230</x>
      <y>3075</y>
      <w>220</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;VideoCutter&gt;&gt;
VideoHandler::VideoHandler
{}
--

--
&lt;&lt;construcotr&gt;&gt; + VideoCutter()
+ cutIntoFrames(stream : VideoStream, frameInterval : int) : image[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2935</x>
      <y>2815</y>
      <w>220</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>VideoHandler::IVideoLibAdapter
{abstract}
--

--
/ + cutIntoFrames(stream, VideoStream, frameInterval int) : Image[]/
/ + loadFrameFromCamera(cameraId : int) : Image /
/ + openCamera(cameraID : int) : boolean /
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3325</x>
      <y>3035</y>
      <w>15</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3445</x>
      <y>2995</y>
      <w>150</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0;110.0;60.0;280.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3590</x>
      <y>3125</y>
      <w>155</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>VideoHandler::AviVideosHandler
--
frameInterval : int
--
&lt;&lt;constructor&gt;&gt;+ AviVideoHandler(frameInterval : int)
+ handleVideo(stream : VideoStream) : image[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2935</x>
      <y>2960</y>
      <w>220</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>VideoHandler::OpenCVAdapter
--
_- videoLibAdapter : IVideoLibAdapter _
--
&lt;&lt;constructor&gt;&gt; - OpenCWAdapter()
+ cutIntoFrames(stream : VideoStream, frameInterval : int) : Image[]
+ loadFrameFromCamera(cameraId : int) : Image 
+ openCamera(cameraID : int) : boolean
_ + getInstance() : OpenCVAdapter_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3150</x>
      <y>2830</y>
      <w>90</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0;100.0;380.0;160.0;380.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3035</x>
      <y>2880</y>
      <w>15</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3585</x>
      <y>2710</y>
      <w>165</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>VideoHandler::ICameraHandler
--

--
/+ GetNextFrame()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3660</x>
      <y>3040</y>
      <w>15</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3150</x>
      <y>2820</y>
      <w>445</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;670.0;10.0;670.0;120.0;870.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3650</x>
      <y>2800</y>
      <w>15</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3780</x>
      <y>2640</y>
      <w>120</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Is responsible for
opening/ closing the connection to 
the camera
As well as taking pictures</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3735</x>
      <y>2675</y>
      <w>60</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;80.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3775</x>
      <y>2955</y>
      <w>70</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Is responsible for 
cutting the video 
into frames</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3730</x>
      <y>2980</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;40.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3415</x>
      <y>2915</y>
      <w>70</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Cuts the video into 
frames</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3415</x>
      <y>2940</y>
      <w>25</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;110.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2895</x>
      <y>2740</y>
      <w>85</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Adapter to video library 
to support the needed 
functionality</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2920</x>
      <y>2765</y>
      <w>45</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>70.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6890</x>
      <y>295</y>
      <w>125</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>View::MainMenu
--
 
--
+ imageClassificationClicked(): void
+ objectDetectionClicked(): void
+ trainingClicked(): void
+ showTopologyClicked(): void
+ openPage(View page): void
+ showPage() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7185</x>
      <y>335</y>
      <w>215</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>View::ImageClassificationControlPanel
--
- checkBoxesDevice : map&lt;string, boolean&gt;
- checkBoxAppendResult : boolean
# startButtonContent : string
--
+ dropDownChanged(string name) : void 
+ addImageClicked() : Image
+ checkBoxChanged(flag : bool, name: sting) : void
+ modeChanged(name : sting) : void
+ imageChanged(img : Image) : void
+ neuronalNetworkChanged(nn : NeuralNetwork) : void
+ startButtonClicked() : void
+ showPage() : void
+ getCheckBoxesDevice() : map&lt;string : boolean&gt;
+ setPossibleDevices(devices : string[]) : void
+ getCheckBoxAppendResults() : bool
# resultsChanged(result: Result) : void
# setCheckBoxAppendResults(flag : bool) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7700</x>
      <y>295</y>
      <w>150</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>View::Topology
--

--
+ chooseTopologyClicked() : void
+ saveVisualisationClicked() : string
+ showPage() : void
- drawTopology(neuralNetwork: NeuralNetwork) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7275</x>
      <y>0</y>
      <w>105</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>{abstract}
View::ViewPage
--
- controller : Controller
--
/+ setController() : void/
/+ showPage() : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7440</x>
      <y>295</y>
      <w>180</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>View::InferencePage
--

--
+ getOperatingMode() : OperatingMode
+ getDevices() : string[]
+ getInputMode() : string
+ getNeuralNetworkPath() : string
+ getInputPathes() : string[]
+ getAppendResult : string[]
+ start() : void
+ showPage() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8780</x>
      <y>0</y>
      <w>105</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>{abstract}
View::Observer
--

--
/+ update()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6960</x>
      <y>55</y>
      <w>375</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>730.0;10.0;730.0;100.0;10.0;100.0;10.0;480.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7320</x>
      <y>220</y>
      <w>15</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7320</x>
      <y>220</y>
      <w>215</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;410.0;60.0;410.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7320</x>
      <y>220</y>
      <w>445</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;870.0;60.0;870.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7375</x>
      <y>5</y>
      <w>1415</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>2810.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6955</x>
      <y>405</y>
      <w>150</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;280.0;130.0;10.0;130.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8080</x>
      <y>130</y>
      <w>425</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>{abstract}
Renderer::ImageRenderer
--
- resultImage : Image
--
/+ drawGraphic() : E/
# drawRectangle(img : Image, x : double, y : double, width : double, height : double, fillingColor : string, strokeColor : string) : Image
# drawText(img : Image, text : string, , x : double, y : double, width : double, height : double) : Image
# drawLine(img : Image, x : double, y : double, fillingColor : string, strokeColor : string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7025</x>
      <y>295</y>
      <w>145</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>View::ClassificationResultPanel
--
- currentImage : Image
--
+ showPage() : void
+ saveButtonClicked() : void
+ previousImgClicked() : void
+ nextImgClicked() : void
+ previousNNClicked() : void
+ nextNNClicked() : void
+ getImage() : Image
+ setImage(img : Image) : void 
+ setResult(result : Result) : void
# resultsChanged(result: Result) : void
# getRenderedResult(result : Result) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7085</x>
      <y>220</y>
      <w>250</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>480.0;10.0;480.0;60.0;10.0;60.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6850</x>
      <y>520</y>
      <w>250</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>View::DetectionResultPanel
--

--
# resultsChanged(result: Result) : void
# getRenderedResult(result : Result)
- drawBoundingBoxes(boundingBoxes : BoundingBox[]) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8085</x>
      <y>420</y>
      <w>175</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Renderer::DetectionResultRender
--

--
+ drawGraphic(result : DetectionResult) : Image
- combineBoundingBoxProbabilities(boundingBoxes : BoundingBox[]) : Probability[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8330</x>
      <y>290</y>
      <w>170</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Renderer::DiagramRender
--

--
+ drawGraphic(probabilities : Probability[]) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8085</x>
      <y>290</y>
      <w>175</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Renderer::ClassificationResultRender
--

--
+ drawGraphic(result : ClassificationResult) : Image</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8165</x>
      <y>220</y>
      <w>105</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;90.0;10.0;90.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8255</x>
      <y>220</y>
      <w>175</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;330.0;90.0;330.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8165</x>
      <y>380</y>
      <w>15</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7185</x>
      <y>545</y>
      <w>215</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>View::DetectionControlPanel
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7280</x>
      <y>500</y>
      <w>15</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7270</x>
      <y>130</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>View::ContentView
--

--
/+ getDataFromExplorer() : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7320</x>
      <y>55</y>
      <w>15</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8525</x>
      <y>290</y>
      <w>185</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Renderer::TopologyRenderer
--

--
+ drawGraphic(neuralNetwork : NeuralNetwork) : Image
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8255</x>
      <y>220</y>
      <w>365</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;710.0;90.0;710.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7395</x>
      <y>310</y>
      <w>55</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;60.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7165</x>
      <y>295</y>
      <w>285</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;550.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4765</x>
      <y>2170</y>
      <w>595</w>
      <h>655</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>720.0;1290.0;720.0;710.0;1170.0;710.0;1170.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3745</x>
      <y>2165</y>
      <w>930</w>
      <h>565</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;1100.0;450.0;1100.0;450.0;10.0;1840.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7370</x>
      <y>150</y>
      <w>720</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>1420.0;10.0;1320.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8530</x>
      <y>2885</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::SinglePowerPredictor
{abstract}
--

--
+ predict(): float
- openCommunication() : boolean
- startTest() : float
/# calculatePower(deviceID : string) : float/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8710</x>
      <y>3010</y>
      <w>155</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::FPGAPerformancePredictor
--

--
+ FPGAPerformancePredictor() 
+ calculatePerformance(deviceID : string) : float
# calculatePerformance(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8710</x>
      <y>2885</y>
      <w>155</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>Prediction::SinglePerformancePredictor
{abstract}
--

--
+ predict(): float
- openCommunication() : boolean
- startTest() : float
/# calculatePerformance(deviceID : string) : float/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8765</x>
      <y>2945</y>
      <w>15</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8615</x>
      <y>2750</y>
      <w>160</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>Prediction::ISinglePredictor
{abstract}
--
# testNN : NeuralNetworkAdapter
# testImage : Image
--
/+ predict(): float/
/# openCommunication() : boolean/
/# startTest() : boolean/
/# getDeviceID() : string /
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8615</x>
      <y>2830</y>
      <w>80</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;140.0;50.0;10.0;50.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8680</x>
      <y>2830</y>
      <w>100</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;180.0;50.0;180.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9400</x>
      <y>2855</y>
      <w>140</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Prediction::PerformancePredictorFromFile
--
- path : string
--
+ predict(ids : string[]): map&lt;string, float&gt;
- loadFromFile() : string[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9155</x>
      <y>2730</y>
      <w>140</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Prediction::Predictor
{abstract}
--
/+ predict(ids : string[]): map&lt;string, float&gt;/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8880</x>
      <y>3010</y>
      <w>155</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::CPUPerformancePredictor
--

--
+ CPUPerformancePredictor() 
+ calculatePerformance(deviceID : string) : float
# calculatePerformance(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9045</x>
      <y>3010</y>
      <w>155</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::GPUPerformancePredictor
--

--
+ GPUPerformancePredictor() 
+ calculatePerformance(deviceID : string) : float
# calculatePerformance(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9210</x>
      <y>3010</y>
      <w>155</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::ASICPerformancePredictor
--

--
+ ASICPerformancePredictor() 
+ calculatePerformance(deviceID : string) : float
# calculatePerformance(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8765</x>
      <y>2945</y>
      <w>210</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;400.0;70.0;400.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8765</x>
      <y>2945</y>
      <w>360</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;700.0;70.0;700.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8765</x>
      <y>2945</y>
      <w>535</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;1050.0;70.0;1050.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8040</x>
      <y>3010</y>
      <w>155</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::FPGAPowerPredictor
--

--
+ FPGAPowerPredictor() 
+ calculatePower(deviceID : string) : float
# calculatePower(deviceID : string) : float
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8210</x>
      <y>3010</y>
      <w>155</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::CPUPowerPredictor
--

--
+ FPGAPowerPredictor() 
+ calculatePower(deviceID : string) : float
# calculatePower(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8375</x>
      <y>3010</y>
      <w>155</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::GPUPowerPredictor
--

--
+ FPGAPowerPredictor() 
+ calculatePower(deviceID : string) : float
# calculatePower(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8540</x>
      <y>3010</y>
      <w>155</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Prediction::ASICPowerPredictor
--

--
+ FPGAPowerPredictor() 
+ calculatePower(deviceID : string) : float
# calculatePower(deviceID : string) : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8615</x>
      <y>2950</y>
      <w>15</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8440</x>
      <y>2950</y>
      <w>190</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>360.0;10.0;360.0;50.0;10.0;50.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8290</x>
      <y>2950</y>
      <w>340</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>660.0;10.0;660.0;50.0;10.0;50.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8095</x>
      <y>2950</y>
      <w>535</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>1050.0;10.0;1050.0;50.0;10.0;50.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>8520</x>
      <y>2690</y>
      <w>95</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Predict for a single device 
power or performance
Uses a prototype function</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8600</x>
      <y>2710</y>
      <w>35</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9250</x>
      <y>2855</y>
      <w>140</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Prediction::PowerPredictorFromFile
--
- path : string
--
+ predict(ids : string[]): map&lt;string, float&gt;
- loadFromFile() : string[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9095</x>
      <y>2915</y>
      <w>140</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Prediction::CurrentPerformancePredictor
--

--
+ predict(): map&lt;string, float&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8945</x>
      <y>2855</y>
      <w>140</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Prediction::CurrentPowerPredictor
--

--
+ predict(): map&lt;string, float&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9010</x>
      <y>2770</y>
      <w>220</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>420.0;10.0;420.0;100.0;10.0;100.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9160</x>
      <y>2770</y>
      <w>70</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;120.0;100.0;10.0;100.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9215</x>
      <y>2770</y>
      <w>110</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;200.0;100.0;200.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9215</x>
      <y>2770</y>
      <w>265</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;510.0;100.0;510.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8770</x>
      <y>2750</y>
      <w>185</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;270.0;10.0;270.0;240.0;350.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8770</x>
      <y>2760</y>
      <w>335</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;10.0;200.0;340.0;650.0;340.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>9305</x>
      <y>2670</y>
      <w>95</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Is responsible to provide
the predicted hardware data
for each device</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9275</x>
      <y>2695</y>
      <w>75</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7155</x>
      <y>1535</y>
      <w>310</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Inferencing::InferencingDistributor
{abstract}
--
- imageDirectories : string[]
- neuralNetworks : NeuralNetworkAdapter[]
- resultManager : ResultManagerAdapter 
--
+ &lt;&lt;constructor&gt;&gt; Inferencing(renderer : ResultRendrer, 
    dispatcher : Dispatcher,
    resultmanager : ResultManagerAdapter)
+ addNN(nn : NeuralNetworkAdapter) : void
+ removeNN(name : string) : void 
+ setInput(directorys : string[]) : void
+ startProcess() : void
+ setSettings(setting : Setting) : void
+ getSettings() : Setting
+ saveResult(neuralnetworkID : int, inputID : int): void
+ getResult(neuralnetworkID : int, inputID : int): Result
+ drawResult(neuralnetworkID : int, inputID : int): void
/- drawResult() : void /
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6850</x>
      <y>1505</y>
      <w>255</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>Inferencing::NeuralNetworkSetter
--
- model : ModelFacade
--
+ &lt;&lt;constructor&gt;&gt; NeuralNetworkSetter(distributor : InterferencingDistributor)
+ setNeuralNetwork(directory : string): void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7100</x>
      <y>1535</y>
      <w>65</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6850</x>
      <y>1765</y>
      <w>260</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Inferencing::PlatformSetter
--
- checkboxes : list&lt;checkbox&gt;
--
&lt;&lt;constructor&gt;&gt; + PlatformSetter(checkboxes : list&lt;checkbox&gt;, 
						distributor : InferencingDistributor)
+ setPlatform() : void
+ setPlatform(platforms : list&lt;string&gt;) . void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7105</x>
      <y>1535</y>
      <w>60</w>
      <h>275</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;60.0;10.0;60.0;530.0;10.0;530.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6850</x>
      <y>1855</y>
      <w>260</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>Inferencing::ModeCalculator
--

--
&lt;&lt;constructor&gt;&gt; + ModeCalculator()
+ setMode() : void
- calculateOptimal() : list&lt;String&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6970</x>
      <y>1840</y>
      <w>15</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7155</x>
      <y>1730</y>
      <w>140</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Inferencing::
InferencingDistributorClassification
--
-drawResult() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7325</x>
      <y>1730</y>
      <w>140</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Inferencing::
InferencingDistributorDetection
--
- boxthreshold : int
--
- drawResult() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7215</x>
      <y>1700</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;30.0;10.0;30.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7300</x>
      <y>1700</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;180.0;30.0;180.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6850</x>
      <y>1580</y>
      <w>255</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Inferencing::Pager
--
- currentinput : image
- prevnnbutton : button
- nextnnbutton : buton
- maxImage : image 
- previmagebutton : button
- nextimagebutton : button
--
&lt;&lt;constructor&gt;&gt; + Pager(prevNeuralNetworkButton : button, 
			nextNeuralNetworkButton : button,
			prevImageButton : button,
			nextImageButton : button)
+ nextImage() : void 
+ prevImage() : void
+ nextNeuralNetwork() : void
+ prevNeuralNetwork() : void 
+ saveResult() : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7100</x>
      <y>1535</y>
      <w>65</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;70.0;10.0;70.0;170.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7515</x>
      <y>1535</y>
      <w>175</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Inferencing::PlatformSetting
--
- deviceList : list&lt;String&gt;
--
+ &lt;&lt;constructor&gt;&gt; PlatformSetting(devices : list&lt;String&gt;) 
+ getDeviceList() : list&lt;String&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7515</x>
      <y>1605</y>
      <w>175</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>Inferencing::OutputSetting
--
- showResults : bool
- saveResults : bool
--
+ &lt;&lt;constructor&gt;&gt; OutputSetting(showResults : bool,
    saveResults : bool)
+ showResultsEnabled() : bool
+ saveResultsEnabled() : bool </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7460</x>
      <y>1575</y>
      <w>65</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;90.0;80.0;90.0;80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7460</x>
      <y>1545</y>
      <w>65</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;80.0;10.0;80.0;50.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7445</x>
      <y>820</y>
      <w>165</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Controller::ControllerFacade
--
- trainer : Trainer
--
+ &lt;&lt;constructor&gt;&gt; Controllerfacade()
+ startProcess() : void
+ saveResults() : void
+ nextNeuralNetwork() : void
+ prevNeuralNetwork() : void
+ nextImage() : void
+ prevImage() : void
+ startTraining() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7465</x>
      <y>1125</y>
      <w>115</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
StartHandler
--

--
- startProcess() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6900</x>
      <y>1125</y>
      <w>115</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
NextPrevHandler
{abstract}
--

--
&lt;&lt;constructor&gt;&gt;+ NextPrevHandler(pager : Pager)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6845</x>
      <y>1210</y>
      <w>105</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
PrevHandler
--
--
- prev() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6960</x>
      <y>1210</y>
      <w>105</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
NextHandler
--
--
- next() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6895</x>
      <y>1175</y>
      <w>70</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;120.0;40.0;10.0;40.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6950</x>
      <y>1175</y>
      <w>75</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;130.0;40.0;130.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7610</x>
      <y>1125</y>
      <w>115</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
SaveResultHandler
--


--
- fetchResults() : void
- saveResults() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7135</x>
      <y>1125</y>
      <w>115</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
FileExplorerHandler
{abstract}
--
- fileexplorer : Fileexplorer
- filetypes : string[]
--
&lt;&lt;construcotr&gt;&gt;&gt; + FileExplorerHandler(inputtypes : string[])
- fetchDirectory() : string
- sendDirectory() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7070</x>
      <y>1225</y>
      <w>115</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
InputImageHandler
--

--
- getInputOption() : void
- setInput() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7125</x>
      <y>1200</y>
      <w>75</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;130.0;30.0;10.0;30.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7300</x>
      <y>1045</y>
      <w>105</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
EventHandler
{abstract}
--
--
+ onAction() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7190</x>
      <y>1085</y>
      <w>170</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>320.0;10.0;320.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6950</x>
      <y>1085</y>
      <w>410</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>800.0;10.0;800.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7345</x>
      <y>1085</y>
      <w>330</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;640.0;50.0;640.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7345</x>
      <y>1085</y>
      <w>185</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;350.0;50.0;350.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7195</x>
      <y>1225</y>
      <w>115</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
NeuralNetworkHandler
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7185</x>
      <y>1200</y>
      <w>75</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;130.0;30.0;130.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7345</x>
      <y>1125</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>EventHandlerModule::
MainHandler
--
- view : ViewFacade
--
+ main(String[] args) : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7345</x>
      <y>1085</y>
      <w>65</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;110.0;50.0;110.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6060</x>
      <y>2265</y>
      <w>290</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkModelAdapter::NeuralNetworkAdapter

--

--
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork()
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork(name : string)
+ addLayer(layer : NetworkLayer)
+ getFirstLayer() : NetworkLayer
+ getLastLayer() : NetworkLayer
+ getNextLayer() : NetworkLayer
+ getPreviousLayer() : NetworkLayer
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5810</x>
      <y>1910</y>
      <w>280</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Resultadapter::ResultsmanagerAdapter
--

--
&lt;&lt;constructor&gt;&gt; + ResultAdapter()
+ getNeuralNetworkList(): list&lt;NeuralNetwork&gt;
+ getImageList() : list&lt;image&gt;
+ getResults() : list&lt;NeuralNetwork,image,result)
+ getResultsPerNeuralNetwork(neuralNetwork : NeuralNetwork) : list&lt;Image,Result&gt;
+ getResultsPerImage(image : image): list&lt;NeuralNetwork,Result&gt;
+ getResult(image : image,neuralNetwork : NeuralNetwork): Result
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7605</x>
      <y>305</y>
      <w>70</w>
      <h>530</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;1040.0;120.0;1040.0;120.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7245</x>
      <y>1160</y>
      <w>100</w>
      <h>385</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>170.0;750.0;170.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4585</x>
      <y>1230</y>
      <w>2815</w>
      <h>930</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;1840.0;10.0;1840.0;20.0;510.0;5610.0;510.0;5610.0;10.0;5450.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6730</x>
      <y>1155</y>
      <w>180</w>
      <h>445</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>240.0;860.0;10.0;860.0;10.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7325</x>
      <y>1145</y>
      <w>445</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;780.0;10.0;730.0;870.0;730.0;870.0;10.0;800.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7235</x>
      <y>1150</y>
      <w>515</w>
      <h>345</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;670.0;1010.0;670.0;1010.0;10.0;980.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7325</x>
      <y>1145</y>
      <w>285</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;780.0;10.0;730.0;550.0;730.0;540.0;10.0;510.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6190</x>
      <y>1605</y>
      <w>670</w>
      <h>670</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
currentNeuralNetwork</panel_attributes>
    <additional_attributes>10.0;1320.0;10.0;10.0;1320.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6225</x>
      <y>1620</y>
      <w>635</w>
      <h>655</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
maxNeuralNetwork</panel_attributes>
    <additional_attributes>10.0;1290.0;10.0;10.0;1250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6345</x>
      <y>2280</y>
      <w>2280</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
testNeuralNetwork
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;10.0;280.0;990.0;4540.0;1000.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2135</x>
      <y>3470</y>
      <w>195</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NeuralNetwork

--
- name : string
- currentLayer : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork()
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork(name : string)
+ addLayera(layer : NetworkLayer) : void
+ getFirstLayer() : NetworkLayer
+ getLastLayer() : NetworkLayer
+ getNextLayer() : NetworkLayer
+ getPreviousLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2695</x>
      <y>3510</y>
      <w>250</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NetworkLayer

--
# name : string
# inputDimensions : int[]
--
+ setName(name : string) : void
+ setInputDimensions(inputDimensions : int[]) : void
+ getName() : string
+ getInputDimensions() : int[]
+ getTensorDimenssions() : int[]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2305</x>
      <y>3655</y>
      <w>460</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionLayer

--
- weigthsTensor : double[][][][]
- stride : int
- padding : int
--
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer()
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer(name : string, inputDimensions : int[], weights : double[][][][], stride : int, padding : int)
+ setWeigthsTensor(weights : double[][][][]) : void
+ setStride(stride : int) : void
+ setPadding(padding : int) : void
+ getWeigthsTensor() : double[][][][]
+ getStride() : int
+ getPadding() : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3140</x>
      <y>3655</y>
      <w>405</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingLayer

--
- type : PollingType
- size : int
- stride : int
--
+ &lt;&lt;constructor&gt;&gt; polingLayer()
+ &lt;&lt;constructor&gt;&gt; polingLayer(name : string, inputDimensions : int[], size : int, stride : int, type : PollingType)
+ setType(type : PollingType) : void
+ setSize(size : int) : void
+ setStride(stride : int) : void
+ getType() : PollingType
+ getSize() : int
+ getStride() : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4010</x>
      <y>3655</y>
      <w>335</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseLayer

--
- matrix : double[][]
--
+ &lt;&lt;constructor&gt;&gt; DenseLayer()
+ &lt;&lt;constructor&gt;&gt; DenseLayer(name : string, inputDimensions : int[], matrix : double[][])
+ setMatrix(matrix : double[][]) : void
+ getMatrix() : double[][]


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5590</x>
      <y>3655</y>
      <w>265</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionLayer

--
- currentChain : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; InceptionLayer()
+ &lt;&lt;constructor&gt;&gt; InceptionLayer(name : string, inputDimensions : int[])
+ addLayer_chain(chain : NeuralNetwork) : void
+ getFirstChain() : NeuralNetwork
+ getNextChain() : NeuralNetwork</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2540</x>
      <y>3615</y>
      <w>3175</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;6330.0;20.0;6330.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3315</x>
      <y>3620</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4155</x>
      <y>3620</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2810</x>
      <y>3600</y>
      <w>15</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2325</x>
      <y>3545</y>
      <w>380</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
list &lt;layers&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;740.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2135</x>
      <y>3575</y>
      <w>80</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;150.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2775</x>
      <y>3655</y>
      <w>355</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationLayer

--
- function : Activation
--
+ &lt;&lt;constructor&gt;&gt; ActivationLayer()
+ &lt;&lt;constructor&gt;&gt; ActivationLayer(name : string, inputDimensions : int[], function : Activation)
+ setFunction(function : Activation) : void
+ getFunction() : Activation

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4355</x>
      <y>3655</y>
      <w>250</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenLayer

--

--
+ &lt;&lt;constructor&gt;&gt; FlattenLayer()
+ &lt;&lt;constructor&gt;&gt; FlattenLayer(name : string, inputDimensions)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4615</x>
      <y>3655</y>
      <w>345</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutLayer

--
- dropoutRate : float
--
+ &lt;&lt;constructor&gt;&gt; DropoutLayer()
+ &lt;&lt;constructor&gt;&gt; DropoutLayer(name : string, inputDimensions : int[], dropoutRate : float)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2920</x>
      <y>3620</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4465</x>
      <y>3620</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4770</x>
      <y>3620</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3555</x>
      <y>3655</y>
      <w>445</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationLayer

--
- type : LRNType
- depth : int
--
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer()
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer(name : string, inputDimensions : int[], type : LRNType, depth : int)
+ setType(type : LRNType) : void
+ setDepth(depth : int) : void
+ getType() : LRNType
+ getDepth() : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3770</x>
      <y>3620</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2325</x>
      <y>3475</y>
      <w>3490</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
list &lt;chains&gt;
</panel_attributes>
    <additional_attributes>6880.0;360.0;6880.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4970</x>
      <y>3655</y>
      <w>295</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsLayer

--

--
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer()
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer(name : string, inputDimensions : int[])</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5095</x>
      <y>3620</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2010</x>
      <y>3635</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::Activation

--
SIGMOID
TANH
RELU
LEAKING_RELU
PARAMETRIC_RELU
SOFTMAX
SWISH</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2010</x>
      <y>3730</y>
      <w>130</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::PollingType

--
MAX
AVEREAGE</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2010</x>
      <y>3785</y>
      <w>130</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::LRNType

--
INTER_CHANNEL
INTRA_CHANNEL</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2135</x>
      <y>3645</y>
      <w>60</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;200.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2135</x>
      <y>3740</y>
      <w>60</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;120.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2155</x>
      <y>3940</y>
      <w>325</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DeviceNetwork

--
- platformName : string
--
+ &lt;&lt;constructor&gt;&gt; NetworkOperations()
+ &lt;&lt;constructor&gt;&gt; NetworkOperations(platformName : string)
+ addKernelCode(layerType : Layertype, kernelCode : string[]) : void
+ executeCalculation(layer : NetworkLayer, inputData : double[][][]) : double[][][]
+ executeBackPropagation(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2410</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>NeuralNetworkPkg::ConvolutionCode
{abstract}
--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3195</x>
      <y>4070</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2820</x>
      <y>4040</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2865</x>
      <y>4070</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2685</x>
      <y>3985</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
/NeuralNetworkPkg::DeviceNetworkLayer/
{abstract}
--
# kernelCode : string[]
--
/# setKernelCode(kernelCode : string[]) : void/
/+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2550</x>
      <y>4065</y>
      <w>2550</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;5080.0;20.0;5080.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3820</x>
      <y>4070</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4130</x>
      <y>4070</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4450</x>
      <y>4070</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3490</x>
      <y>4070</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4770</x>
      <y>4070</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>3865</y>
      <w>200</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;uses&gt;&gt;
</panel_attributes>
    <additional_attributes>380.0;240.0;10.0;240.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5275</x>
      <y>3655</y>
      <w>305</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageLayer

--
- outputData : double[][][]
--
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer()
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer(name : string, outputData : double[][][])
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5430</x>
      <y>3620</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2010</x>
      <y>3840</y>
      <w>130</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::LayerType

--
CONVOLUTION
ACTIVATION
POLING
LRN
DENSE
FLATTEN
DROPOUT
COLLECT_RESULTS
INCEPTION
OUTPUT_STORAGE</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>3805</y>
      <w>55</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>3745</y>
      <w>55</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>3685</y>
      <w>55</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2475</x>
      <y>3995</y>
      <w>220</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1..n
layer</panel_attributes>
    <additional_attributes>10.0;20.0;420.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2725</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3040</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3355</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3670</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3985</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4300</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4615</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4930</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2475</x>
      <y>3945</y>
      <w>2725</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
operations</panel_attributes>
    <additional_attributes>10.0;20.0;5430.0;20.0;5430.0;320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2180</x>
      <y>4200</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeCPU

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2180</x>
      <y>4275</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeFPGA

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2180</x>
      <y>4350</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeGPU

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2180</x>
      <y>4425</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeASIC

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>4420</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>4270</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>4195</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>4345</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2950</x>
      <y>4420</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2950</x>
      <y>4345</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2950</x>
      <y>4270</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2950</x>
      <y>4195</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3325</x>
      <y>4195</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3325</x>
      <y>4265</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3325</x>
      <y>4340</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3325</x>
      <y>4420</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3680</x>
      <y>4420</y>
      <w>270</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3680</x>
      <y>4340</y>
      <w>270</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3680</x>
      <y>4265</y>
      <w>270</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3680</x>
      <y>4195</y>
      <w>270</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3995</x>
      <y>4420</y>
      <w>265</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3995</x>
      <y>4340</y>
      <w>265</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3995</x>
      <y>4265</y>
      <w>265</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3995</x>
      <y>4195</y>
      <w>265</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4305</x>
      <y>4195</y>
      <w>265</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4305</x>
      <y>4340</y>
      <w>265</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4305</x>
      <y>4265</y>
      <w>265</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4305</x>
      <y>4420</y>
      <w>265</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4620</x>
      <y>4195</y>
      <w>260</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4620</x>
      <y>4420</y>
      <w>260</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4620</x>
      <y>4340</y>
      <w>260</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4620</x>
      <y>4265</y>
      <w>260</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4935</x>
      <y>4420</y>
      <w>275</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4935</x>
      <y>4340</y>
      <w>275</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4935</x>
      <y>4265</y>
      <w>275</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4935</x>
      <y>4195</y>
      <w>275</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2480</x>
      <y>4160</y>
      <w>65</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;110.0;110.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2480</x>
      <y>4160</y>
      <w>65</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;110.0;260.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2480</x>
      <y>4160</y>
      <w>65</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;110.0;410.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2480</x>
      <y>4160</y>
      <w>65</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;110.0;570.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2860</x>
      <y>4160</y>
      <w>65</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;110.0;570.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2860</x>
      <y>4160</y>
      <w>65</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;110.0;410.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2860</x>
      <y>4160</y>
      <w>65</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;110.0;260.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2860</x>
      <y>4160</y>
      <w>65</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;110.0;110.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3250</x>
      <y>4160</y>
      <w>65</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;110.0;570.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3250</x>
      <y>4160</y>
      <w>65</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;110.0;410.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3250</x>
      <y>4160</y>
      <w>65</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;110.0;260.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3250</x>
      <y>4160</y>
      <w>65</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;110.0;110.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3625</x>
      <y>4160</y>
      <w>35</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3625</x>
      <y>4160</y>
      <w>35</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3625</x>
      <y>4160</y>
      <w>35</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3625</x>
      <y>4160</y>
      <w>35</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3945</x>
      <y>4160</y>
      <w>35</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3945</x>
      <y>4160</y>
      <w>35</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3945</x>
      <y>4160</y>
      <w>35</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3945</x>
      <y>4160</y>
      <w>35</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4255</x>
      <y>4160</y>
      <w>35</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4255</x>
      <y>4160</y>
      <w>35</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4255</x>
      <y>4160</y>
      <w>35</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4255</x>
      <y>4160</y>
      <w>35</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4565</x>
      <y>4160</y>
      <w>35</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4565</x>
      <y>4160</y>
      <w>35</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4565</x>
      <y>4160</y>
      <w>35</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4565</x>
      <y>4160</y>
      <w>35</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4875</x>
      <y>4160</y>
      <w>35</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4875</x>
      <y>4160</y>
      <w>35</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4875</x>
      <y>4160</y>
      <w>35</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4875</x>
      <y>4160</y>
      <w>35</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5205</x>
      <y>4160</y>
      <w>35</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5205</x>
      <y>4160</y>
      <w>35</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5205</x>
      <y>4160</y>
      <w>35</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5205</x>
      <y>4160</y>
      <w>35</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2230</x>
      <y>2275</y>
      <w>3840</w>
      <h>1205</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;2390.0;10.0;2210.0;7210.0;2190.0;7210.0;10.0;7660.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6720</x>
      <y>2115</y>
      <w>510</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>
Training::Trainer

--
- inputData : IData[]
- trainingData : ResultAdapter[]
- learningRate : double
- testAccuracyGraph : double[]
- trainingAccuracyGraph : double[]
--
+ &lt;&lt;constructor&gt;&gt; Trainer(neuralNetwork : NeuralNetwork, IData[], trainingData : Result[], learningRate : double, )
+ start() : void
+ getTrainedNetwork() : NeuralNetwork
+ getTestAccuracyGraph() : double[]
+ getTrainAccuracyGraph() : double[] </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6725</x>
      <y>2325</y>
      <w>510</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>
Training::SingleTrainer

--
- inputData : double[][][]
- trainingData : double[][][]
- cacheData : double[][][]
- learningRate : double
- testAccuracy : double
- trainingAccuracy : double
- trainingOperations : NetworkOperations
- calculatingOperations : NetworkOperations
--
+ &lt;&lt;constructor&gt;&gt; SingleTrainer(learningRate : double, trainingOperations : NetworkOperations, calculatingOperations : NetworkOperations)
+ init(neuralNetwork : NeuralNetwork, inputData : double[][][], trainingData : double[][][]) : void
- calculateLayer(layer : NetworkLayer, inputData : double[][][]) : double [][][]
- calculateResults() : void
- trainLayer(layer : NetworkLayer, data : double[][][][]) : NetworkLayer
- performTraining() : void
+ train() : NeuralNetwork
+ getTestAccuracy() : double
+ getTrainAccuracy() : double</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6945</x>
      <y>2245</y>
      <w>55</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
singleTrainer</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7400</x>
      <y>840</y>
      <w>115</w>
      <h>235</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=3
m2=1


resultHandler
inputHandler
neuralNetworkHandler</panel_attributes>
    <additional_attributes>10.0;440.0;70.0;440.0;70.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7340</x>
      <y>840</y>
      <w>505</w>
      <h>705</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
distributor</panel_attributes>
    <additional_attributes>10.0;1390.0;10.0;1360.0;990.0;1360.0;980.0;10.0;540.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6345</x>
      <y>2160</y>
      <w>385</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=2
neuralNetwork
trainedNetwork
</panel_attributes>
    <additional_attributes>10.0;210.0;290.0;210.0;290.0;10.0;750.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6345</x>
      <y>2270</y>
      <w>390</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=3
neuralNetwork
internalResults
trainedNetwork
</panel_attributes>
    <additional_attributes>10.0;10.0;640.0;10.0;640.0;260.0;760.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7460</x>
      <y>5</y>
      <w>1615</w>
      <h>1825</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>2850.0;10.0;3210.0;10.0;3210.0;3610.0;60.0;3630.0;60.0;3170.0;10.0;3170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5250</x>
      <y>4105</y>
      <w>305</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5260</x>
      <y>4195</y>
      <w>270</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5260</x>
      <y>4265</y>
      <w>270</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5260</x>
      <y>4340</y>
      <w>270</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5260</x>
      <y>4420</y>
      <w>270</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5185</x>
      <y>3945</y>
      <w>230</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;20.0;440.0;20.0;440.0;320.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5525</x>
      <y>4160</y>
      <w>35</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5525</x>
      <y>4160</y>
      <w>35</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;50.0;260.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5525</x>
      <y>4160</y>
      <w>35</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;410.0;50.0;410.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5525</x>
      <y>4160</y>
      <w>35</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;570.0;50.0;570.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5460</x>
      <y>1585</y>
      <w>255</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>ResultModel::ResultManager
--
- resultList : List&lt;Result&gt;
- neuralNetworkMap : map&lt;string , Result&gt;
- imageMap : map&lt;string , Result&gt;
--
+ &lt;&lt;constructor&gt;&gt; ResultManager(resultList : list&lt;Result&gt;)
+ getResultsByImage(imageID : string) : list&lt;Result&gt;
+ getResultsByNeuralNetwork(neuralNetworkID : string) : list&lt;Result&gt;
+ getSingleResult(imageID : string, neuralNetworkID : string) : Result
+ addResult(result : Result) : void
+ addResults(results : list&lt;Result&gt;) : void
- organizeResults(result : Results) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5155</x>
      <y>1590</y>
      <w>240</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>ResultModel::Result
--
- imageID : string
- neuralNetworkID : string
--
+ &lt;&lt;constructor&gt;&gt; Result(imageID : string, neuralNetworkID : string)
+ GetImageID() : string
+ GetNeuralNetworkID() : string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4965</x>
      <y>1990</y>
      <w>225</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>ResultModel:ClassProbability
--
- className : string
- probability : float
--
+ &lt;&lt;constructor&gt;&gt; NetworkPredicition( name : string, probability : float)
+ getClassName() : string
+ getProbability() : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4955</x>
      <y>1795</y>
      <w>380</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>ResultModel::DetectionResult
--

--
+ &lt;&lt;constructor&gt;&gt; DetectionResult(imageID : string, neuralNetworkID : string, boundingBox : BoundingBox)
+ getBoundingBoxes() : list&lt;BoundingBox&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5115</x>
      <y>1690</y>
      <w>155</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;290.0;110.0;10.0;110.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4700</x>
      <y>1815</y>
      <w>225</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>ResultModel::BoundingBox
--
- x : float
- y : float
- width : float
- height : float
--
+ &lt;&lt;constructor&gt;&gt; BoundingBox( x : float, y : float, width : float, height : float)
+ getX() : float
+ getY() : float
+ getWidth() : float
+ getHeight() : float
+ getProbabilities() : list&lt;ClassProbabilities&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5340</x>
      <y>1795</y>
      <w>305</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>ResultModel::ClassificationResult
--

--
+ &lt;&lt;constructor&gt;&gt; ClassificationResultModel(imageID : string, neuralNetworkID : string)
+ GetProbablities() : list&lt;ClassProbalities&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5255</x>
      <y>1690</y>
      <w>205</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0;390.0;110.0;390.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4920</x>
      <y>1820</y>
      <w>45</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4665</x>
      <y>1865</y>
      <w>310</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>600.0;270.0;10.0;270.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5185</x>
      <y>1895</y>
      <w>340</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>10.0;210.0;660.0;210.0;660.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5710</x>
      <y>1585</y>
      <w>140</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
resultManager</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0;170.0;650.0;200.0;680.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7465</x>
      <y>2215</y>
      <w>225</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>Dispatcher::DispatchManager
--
_- dispatcher : DispatchManager_
- mode : Mode
- deviceList : list&lt;Device&gt;
- deviceChannelMap : map&lt;(Device, Channel)&gt;
--
- &lt;&lt;Constructor&gt;&gt; DispatchManager()
_+ getInstance() : DispatchManager_
+ setMode(operatingMode : Mode) : void
+ getMode() : Mode
+ getModeList() : list&lt;Mode&gt;
+ setNeuralNetworkList(list&lt;NeuralNetwork&gt; : void
+ getNeuralNetworkList() : list&lt;NeuralNetwork&gt;
+ dispatchImages(imageList : list&lt;Image&gt;) : Resultmanager
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7610</x>
      <y>2070</y>
      <w>265</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Dispatcher::Mode
--
- modeName: string
- deviceList : list&lt;Device&gt;
- neuralNetworkList : list&lt;NeuralNetwork&gt;
--
+ &lt;&lt;constructor&gt;&gt; Mode()
+ getModeName() : string
+ setAllowedDeviceList(deviceList : list&lt;Device&gt;) : void
+ setNeuralNetworkList(neuralNetworkList : list&lt;NeuralNetwork&gt;) : void
+ setImageList(imageList : list&lt;image&gt;) : void
/+ distributeImages() : ResultManager/
/# calculate(deviceList : list&lt;Device&gt;) : (float, float)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7715</x>
      <y>2330</y>
      <w>130</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Dispatcher::Device
--
- name : string
- type : string
- ram : long
- performance : double
--
+ &lt;&lt;constructor&gt;&gt; Device()
+ getType() : string
+ getName() : string
+ getRAM() : long
+ getPerformance() : double</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7910</x>
      <y>2125</y>
      <w>265</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Dispatcher::HighPerformanceMode
--
- modeName : string
--
+ distributeImages() : ResultManager
# calculate(deviceList : list&lt;Device&gt;) : (float, float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7910</x>
      <y>2175</y>
      <w>265</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Dispatcher::HighEfficiencyMode
--
- modeName : string
--
+ distributeImages() : ResultManager
# calculate(deviceList : list&lt;Device&gt;) : (float, float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7910</x>
      <y>2220</y>
      <w>265</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Dispatcher::LowPowerMode
--
- modeName : string
--
+ distributeImages() : ResultManager
# calculate(deviceList : list&lt;Device&gt;) : (float, float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7905</x>
      <y>2485</y>
      <w>145</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Dispatcher::FPGADevice
--
- name : string
- type : string
- ram : long
- performance : double
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7760</x>
      <y>2485</y>
      <w>145</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Dispatcher::ASICDevice
--
- name : string
- type : string
- ram : long
- performance : double
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7610</x>
      <y>2485</y>
      <w>150</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Dispatcher::CPUDevice
--
- name : string
- type : string
- ram : long
- performance : double
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7470</x>
      <y>2485</y>
      <w>140</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Dispatcher::GPUDevice
--
- name : string
- type : string
- ram : long
- performance : double
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7675</x>
      <y>2170</y>
      <w>245</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;420.0;70.0;420.0;30.0;470.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7675</x>
      <y>2170</y>
      <w>245</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;420.0;70.0;420.0;120.0;470.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7675</x>
      <y>2135</y>
      <w>245</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;140.0;420.0;140.0;420.0;10.0;470.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7555</x>
      <y>2425</y>
      <w>215</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>410.0;10.0;410.0;70.0;10.0;70.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7700</x>
      <y>2425</y>
      <w>70</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;120.0;70.0;10.0;70.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7755</x>
      <y>2425</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;440.0;70.0;440.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7755</x>
      <y>2425</y>
      <w>65</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;110.0;70.0;110.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7425</x>
      <y>1605</y>
      <w>65</w>
      <h>650</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1</panel_attributes>
    <additional_attributes>80.0;1270.0;10.0;1270.0;10.0;950.0;110.0;950.0;110.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8320</x>
      <y>2070</y>
      <w>340</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Communication::Channel
--
- deviceHandler : Device
- NeuralNetworkList : list&lt;NeuralNetwork&gt;
- ImageList : list&lt;image&gt;
--
+ &lt;&lt;Constructor&gt;&gt; Channel(connectedDevice : Device)
+ &lt;&lt;Constructor&gt;&gt; Channel(connectedDevice : Device, neuralNetworkList : list&lt;NeuralNetwork&gt;)
+ setNeuralNetworkList(neuralNetworkList : list&lt;NeuralNetwork&gt;) : void
/+ sendImageList(imageList : list&lt;image&gt;) : Result/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8800</x>
      <y>2105</y>
      <w>210</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Communication::GPUChannel
--

--
+ sendImageList(imageList : list&lt;image&gt;) : Result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8800</x>
      <y>2060</y>
      <w>210</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Communication::CPUChannel
--

--
+ sendImageList(imageList : list&lt;image&gt;) : Result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8800</x>
      <y>2150</y>
      <w>210</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Communication::FPGAChannel
--

--
+ sendImageList(imageList : list&lt;image&gt;) : Result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8800</x>
      <y>2195</y>
      <w>210</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Communication::ASICChannel
--

--
+ sendImageList(imageList : list&lt;image&gt;) : Result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8410</x>
      <y>2150</y>
      <w>400</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0;700.0;170.0;700.0;100.0;780.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8410</x>
      <y>2150</y>
      <w>400</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0;700.0;170.0;700.0;10.0;780.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8340</x>
      <y>2375</y>
      <w>340</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Communication::AbstractFactory
--

--
/getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8750</x>
      <y>2380</y>
      <w>265</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Communication::ConcreteFactoryASIC
--

--
getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8750</x>
      <y>2280</y>
      <w>265</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Communication::ConcreteFactoryFPGA
--

--
getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8750</x>
      <y>2435</y>
      <w>265</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Communication::ConcreteFactoryGPU
--

--
getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8750</x>
      <y>2330</y>
      <w>265</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Communication::ConcreteFactoryCPU
--

--
getOpenclCode(networkDescription : NeuralNetwork) : DeviceNetwork

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8410</x>
      <y>2105</y>
      <w>400</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;260.0;700.0;260.0;700.0;10.0;780.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8410</x>
      <y>2060</y>
      <w>400</w>
      <h>185</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;350.0;700.0;350.0;700.0;10.0;780.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8675</x>
      <y>2280</y>
      <w>85</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;210.0;40.0;210.0;40.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8675</x>
      <y>2330</y>
      <w>85</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;40.0;110.0;40.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8675</x>
      <y>2380</y>
      <w>85</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8675</x>
      <y>2380</y>
      <w>85</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0;40.0;120.0;150.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8285</x>
      <y>2080</y>
      <w>65</w>
      <h>315</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;610.0;10.0;610.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7870</x>
      <y>2070</y>
      <w>460</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>900.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1685</x>
      <y>1640</y>
      <w>105</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>Parser::IParser
{abstract}
--

--
/+ parse(toParse : string), E /
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1685</x>
      <y>1910</y>
      <w>105</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Parser::ImageLocationsParser
--

--
# parse(splittedText : string[]) : E</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1535</x>
      <y>1910</y>
      <w>135</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Parser::NeuralNetworkParser
--

--
# parse(splittedText : string[]) : E</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1400</x>
      <y>1910</y>
      <w>105</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Parser::LayerParser
--

--
# parse(splittedText : string[]) : E</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1270</x>
      <y>2050</y>
      <w>140</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Parser::SingleDetectionDatasetParser
--

--
+ parse(toParse: string), DetectionData</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1815</x>
      <y>2045</y>
      <w>130</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Parser::DetectionDatasetParser
--

--
+ parse(splittedText : string[], images : image[]) : Detecttiondataset
+ par</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1660</x>
      <y>1760</y>
      <w>165</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Parser::LineBreakParser
{abstract}
--

--
+ parse(toParse : string) : E
# splitIntoLines(text : string) : string[]
# splitBySymbol(string text, char symbol) . string[]
/# parse(splittedText : string[]) : E/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1925</x>
      <y>1910</y>
      <w>145</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Parser::ClassificationResultParser
--

--
+ parse(toParse : string), ClassificationResult </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1730</x>
      <y>1690</y>
      <w>15</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1730</x>
      <y>1850</y>
      <w>15</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1730</x>
      <y>1875</y>
      <w>145</w>
      <h>180</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;270.0;20.0;270.0;340.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1600</x>
      <y>1875</y>
      <w>145</w>
      <h>45</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>270.0;20.0;10.0;20.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1445</x>
      <y>1875</y>
      <w>170</w>
      <h>45</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>320.0;20.0;10.0;20.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>1705</y>
      <w>425</w>
      <h>355</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>830.0;20.0;10.0;20.0;10.0;690.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1715</x>
      <y>1705</y>
      <w>295</w>
      <h>215</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;570.0;20.0;570.0;410.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1405</x>
      <y>2055</y>
      <w>420</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;820.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1010</x>
      <y>1920</y>
      <w>230</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Parser::ImageParser
{abstract}
--
width : int
height : int
channelNumb : int
--
&lt;&lt;consturctor&gt;&gt; + ImageParser(width : int, height : int, channelNumb : int)
+ parse(image : int[]), image
/# resize(image : int[], width : int, height : int, channelnumb : int), int[]/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2100</x>
      <y>1910</y>
      <w>140</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Parser::DetectionResultParser
--

--
+ parse(toParse : string): DetectionResult</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1890</x>
      <y>1705</y>
      <w>295</w>
      <h>215</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;570.0;20.0;570.0;410.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1125</x>
      <y>1705</y>
      <w>425</w>
      <h>225</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>830.0;20.0;10.0;20.0;10.0;430.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>2380</y>
      <w>255</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::NeuralNetworkFactory
--

--
_+ buildNeuralNetwork(layers : list&lt;NetworkLayer&gt;) : NeuralNetwork_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>920</x>
      <y>2445</y>
      <w>285</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Parser::PoolingLayerFactory
--
- padding : int
- stride : int
- tensors : double[][][]
--
+ buildLayer() : NetworkLayer
+ setWeightTensor(tensors : double[][][]) : PoolingLayer
+ setStride(stride : int) : PoolingLayer
+ setPadding(padding : int) : PoolingLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1215</x>
      <y>2445</y>
      <w>285</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::ActivationLayerFactory
--
- function : Activation
--
+ buildLayer() : NetworkLayer
+ setActivation(function : Activation) : ActivationLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1080</x>
      <y>2300</y>
      <w>285</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Parser::LayerFactory
{abstract}
--
- inputDimension : int
--
/+ buildLayer() : NetworkLayer/
+ setInputDimension(dimension : int) : LayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1055</x>
      <y>2390</y>
      <w>170</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>320.0;10.0;320.0;50.0;10.0;50.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1210</x>
      <y>2390</y>
      <w>160</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;300.0;50.0;300.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>2380</y>
      <w>410</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Parser::ClassificationResultFactory
--

--
_+ buildClassificationResult(imageID : string, neuralNetworkID : string, probabilities : float[]) : ClassificationResult _
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>2310</y>
      <w>410</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Parser::DetectionResultFactory
--

--
_+ buildDetectionResult(imageID : string, neuralNetworkID : string, boundingBoxes : list&lt;BoundingBox&gt;) : ClassificationResult _
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>2310</y>
      <w>255</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::BoundingBoxFactory
--

--
_+ buildBoundingBox(x : float, y : float, width : float, _
_height : float, probabilities : list&lt;Probabilities&gt;) : BoundingBox_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2310</x>
      <y>1910</y>
      <w>140</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>Parser::ProbabilityParser
--

--
+ parse(toParse : string): DetectionResult</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2055</x>
      <y>1705</y>
      <w>335</w>
      <h>215</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;650.0;20.0;650.0;410.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1800</x>
      <y>1580</y>
      <w>95</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Generic abstract parser</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1770</x>
      <y>1600</y>
      <w>60</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;90.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>785</x>
      <y>2050</y>
      <w>215</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Parser::ImageParserWithCropping
{}
--

--
&lt;&lt;consturctor&gt;&gt; + ImageParserWithCropping
                          (width : int, height : int, channelNumb : int)
- resize(image : int[], width : int, height : int, channelnumb : int), int[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1025</x>
      <y>2050</y>
      <w>215</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>Parser::ImageParserWithPadding
{}
--

--
&lt;&lt;consturctor&gt;&gt; + ImageParserWithPadding
                          (width : int, height : int, channelNumb : int)
- resize(image : int[], width : int, height : int, channelnumb : int), int[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1125</x>
      <y>2010</y>
      <w>15</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>885</x>
      <y>2010</y>
      <w>255</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>490.0;10.0;490.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1870</x>
      <y>1730</y>
      <w>95</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>One abstraction layer deeper
parses all input with 
line breaks</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1805</x>
      <y>1755</y>
      <w>80</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=..</panel_attributes>
    <additional_attributes>10.0;30.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>825</x>
      <y>2320</y>
      <w>110</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>Factories for encapsulate the 
creating of the concrete objects
from the input parsing</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1515</x>
      <y>2445</y>
      <w>285</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Parser::PollingLayerFactory
--
- type : PollingType
- size : int
- stride : int
--
+ buildLayer() : NetworkLayer
+ setPollingType(type : PollingType) : PollingLayerFactory
+ setSize(size : int) PollingLayerFactory
+ setStride(stride : int) : PollingLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1810</x>
      <y>2445</y>
      <w>285</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Parser::LocalResponseNormalizationLayerFactory
--
- type : LRNType
- depth : int
--
+ buildLayer() : NetworkLayer
+ setType(type : LRNType) : LocalResponseNormalizationLayerFactory
+ setDepth(depth : int) : LocalResponseNormalizationLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2115</x>
      <y>2445</y>
      <w>285</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::DenseLayerFactory
--
- matrix : double[][]
--
+ buildLayer() : NetworkLayer
+ setMatrix(amtrix : double[][]) : DenseLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2410</x>
      <y>2445</y>
      <w>285</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::FlattenLayerFactory
--

--
+ buildLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2710</x>
      <y>2445</y>
      <w>285</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::DropoutLayerFactory
--
- dropoutRate : float
--
+ buildLayer() : NetworkLayer
+ setDropoutRate(dorupoutRate : float) : DropoutLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3015</x>
      <y>2445</y>
      <w>285</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::CollectResultsLayerFactory
--

--
+ buildLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3315</x>
      <y>2445</y>
      <w>285</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::OutputStorageLayerFactory
--
- outputData : double[][][]
--
+ buildLayer() : NetworkLayer
+ setOuputData(outputData . double[][][]) : OutputStorageLayerFactory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3615</x>
      <y>2445</y>
      <w>285</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Parser::InceptionLayerFactory
--

--
+ buildLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1355</x>
      <y>2405</y>
      <w>320</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1635</x>
      <y>2405</y>
      <w>320</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1930</x>
      <y>2405</y>
      <w>320</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2235</x>
      <y>2405</y>
      <w>320</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2535</x>
      <y>2405</y>
      <w>320</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;620.0;20.0;620.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2840</x>
      <y>2405</y>
      <w>345</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;670.0;20.0;670.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3105</x>
      <y>2405</y>
      <w>345</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;670.0;20.0;670.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3425</x>
      <y>2405</y>
      <w>345</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;670.0;20.0;670.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1785</x>
      <y>1645</y>
      <w>2890</w>
      <h>525</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;2670.0;10.0;2660.0;1030.0;5760.0;1030.0</additional_attributes>
  </element>
</diagram>
