<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>0</y>
      <w>312</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NeuralNetwork

--
- name : string
- currentLayer : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork() : void
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork(name : string) : void
+ addLayeraddLayer(layer : NetworkLayer) : void
+ getFirstLayer() : NetworkLayer
+ getLastLayer() : NetworkLayer
+ getNextLayer() : NetworkLayer
+ getPreviousLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1416</x>
      <y>64</y>
      <w>400</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
NeuralNetworkPkg::NetworkLayer

--
# name : string
# inputDimensions : int[]
--
+ setName(name : string) : void
+ setInputDimensions(inputDimensions : int[]) : void
+ getName() : string
+ getInputDimensions() : int[]
+ getTensorDimenssions() : int[]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>296</y>
      <w>736</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionLayer

--
- weigthsTensor : double[][][][]
- stride : int
- padding : int
--
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer() : void
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer(name : string, inputDimensions : int[], weights : double[][][][], stride : int, padding : int) : void
+ setWeigthsTensor(weights : double[][][][]) : void
+ setStride(stride : int) : void
+ setPadding(padding : int) : void
+ getWeigthsTensor() : double[][][][]
+ getStride() : int
+ getPadding() : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2128</x>
      <y>296</y>
      <w>592</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::polingLayer

--
- type : PollingType
- size : int
- stride : int
--
+ &lt;&lt;constructor&gt;&gt; polingLayer() : void
+ &lt;&lt;constructor&gt;&gt; polingLayer(name : string, inputDimensions : int[], size : int, stride : int, type : PollingType) : void
+ setType(type : PollingType) : void
+ setSize(size : int) : void
+ setStride(stride : int) : void
+ getType() : PollingType
+ getSize() : int
+ getStride() : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3464</x>
      <y>296</y>
      <w>536</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseLayer

--
- matrix : double[][]
--
+ &lt;&lt;constructor&gt;&gt; DenseLayer() : void
+ &lt;&lt;constructor&gt;&gt; DenseLayer(name : string, inputDimensions : int[], matrix : double[][]) : void
+ setMatrix(matrix : double[][]) : void
+ getMatrix() : double[][]


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5488</x>
      <y>296</y>
      <w>424</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionLayer

--
- currentChain : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; InceptionLayer() : void
+ &lt;&lt;constructor&gt;&gt; InceptionLayer(name : string, inputDimensions : int[]) : void
+ addLayer_chain(chain : NeuralNetwork) : void
+ getFirstChain() : NeuralNetwork
+ getNextChain() : NeuralNetwork</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>232</y>
      <w>4520</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;5630.0;20.0;5630.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2408</x>
      <y>240</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3696</x>
      <y>240</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1600</x>
      <y>208</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>120</y>
      <w>608</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
layers</panel_attributes>
    <additional_attributes>10.0;20.0;740.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>456</x>
      <y>168</y>
      <w>136</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;150.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1544</x>
      <y>296</y>
      <w>568</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationLayer

--
- function : Activation
--
+ &lt;&lt;constructor&gt;&gt; ActivationLayer() : void
+ &lt;&lt;constructor&gt;&gt; ActivationLayer(name : string, inputDimensions : int[], function : Activation) : void
+ setFunction(function : Activation) : void
+ getFunction() : Activation

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4016</x>
      <y>296</y>
      <w>400</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenLayer

--

--
+ &lt;&lt;constructor&gt;&gt; FlattenLayer() : void
+ &lt;&lt;constructor&gt;&gt; FlattenLayer(name : string, inputDimensions) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4432</x>
      <y>296</y>
      <w>552</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutLayer

--
- dropoutRate : float
--
+ &lt;&lt;constructor&gt;&gt; DropoutLayer() : void
+ &lt;&lt;constructor&gt;&gt; DropoutLayer(name : string, inputDimensions : int[], dropoutRate : float) : void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1776</x>
      <y>240</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4192</x>
      <y>240</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4680</x>
      <y>240</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2736</x>
      <y>296</y>
      <w>712</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationLayer

--
- type : LRNType
- depth : int
--
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer() : void
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer(name : string, inputDimensions : int[], type : LRNType, depth : int) : void
+ setType(type : LRNType) : void
+ setDepth(depth : int) : void
+ getType() : LRNType
+ getDepth() : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3080</x>
      <y>240</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>8</y>
      <w>4992</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
chains
</panel_attributes>
    <additional_attributes>6180.0;360.0;6180.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5000</x>
      <y>296</y>
      <w>472</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsLayer

--

--
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer() : void
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer(name : string, inputDimensions : int[]) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5200</x>
      <y>240</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>256</x>
      <y>264</y>
      <w>208</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::Activation

--
sigmoid
tanh
relu
lRelu
pRelu
softmax
swish
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>256</x>
      <y>416</y>
      <w>208</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::PollingType

--
max
avereage</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>256</x>
      <y>504</y>
      <w>208</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::LRNType

--
interChannel
intraChannel</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>456</x>
      <y>280</y>
      <w>96</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;200.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>456</x>
      <y>432</y>
      <w>96</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;120.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>528</x>
      <y>1216</y>
      <w>336</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NetworkOperations

--

--
+ &lt;&lt;constructor&gt;&gt; NetworkOperations() : void
+ &lt;&lt;constructor&gt;&gt; NetworkOperations(name : string) : void
+ addLayer(layer : NetworkLayer) : void
+ getFirstLayer() : NetworkLayer
+ getLastLayer() : NetworkLayer
+ getNextLayer() : NetworkLayer
+ getPreviousLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>832</x>
      <y>920</y>
      <w>704</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionLayer

--
- stride : int
- padding : int
--
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer() : void
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer(name : string, inputDimensions : int[], weights : double[][][][], stride : int, padding : int) : void
+ setTensor(weights : double[][][][]) : void
+ setStride(stride : int) : void
+ setPadding(padding : int) : void
+ getTensor() : double[][][][]
+ getStride() : int
+ getPadding() : int

group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2064</x>
      <y>920</y>
      <w>592</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::polingLayer

--
- type : PollingType
- size : int
- stride : int
--
+ &lt;&lt;constructor&gt;&gt; polingLayer() : void
+ &lt;&lt;constructor&gt;&gt; polingLayer(name : string, inputDimensions : int[], size : int, stride : int, type : PollingType) : void
+ setType(type : PollingType) : void
+ setSize(size : int) : void
+ setStride(stride : int) : void
+ getType() : PollingType
+ getSize() : int
+ getStride() : int


group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3376</x>
      <y>920</y>
      <w>504</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseLayer

--
- matrix : double[][]
--
+ &lt;&lt;constructor&gt;&gt; DenseLayer() : void
+ &lt;&lt;constructor&gt;&gt; DenseLayer(name : string, inputDimensions : int[], matrix : double[][]) : void
+ setMatrix(matrix : double[][]) : void
+ getMatrix() : double[][]



group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5256</x>
      <y>920</y>
      <w>424</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionLayer

--
- currentChain : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; InceptionLayer() : void
+ &lt;&lt;constructor&gt;&gt; InceptionLayer(name : string, inputDimensions : int[]) : void
+ addLayer_chain(chain : NeuralNetwork) : void
+ getFirstChain() : NeuralNetwork
+ getNextChain() : NeuralNetwork
group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2344</x>
      <y>864</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
group=9</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1608</x>
      <y>832</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
group=9</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1552</x>
      <y>920</y>
      <w>496</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationLayer

--
- function : Activation
--
+ &lt;&lt;constructor&gt;&gt; ActivationLayer() : void
+ &lt;&lt;constructor&gt;&gt; ActivationLayer(name : string, inputDimensions : int[], function : Activation) : void
+ setFunction(function : Activation) : void
+ getFunction() : Activation


group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3896</x>
      <y>920</y>
      <w>360</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenLayer

--

--
+ &lt;&lt;constructor&gt;&gt; FlattenLayer() : void
+ &lt;&lt;constructor&gt;&gt; FlattenLayer(name : string, inputDimensions) : void

group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4272</x>
      <y>920</y>
      <w>520</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutLayer

--
- dropoutRate : float
--
+ &lt;&lt;constructor&gt;&gt; DropoutLayer() : void
+ &lt;&lt;constructor&gt;&gt; DropoutLayer(name : string, inputDimensions : int[], dropoutRate : float) : void


group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1784</x>
      <y>864</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
group=9</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2672</x>
      <y>920</y>
      <w>680</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationLayer

--
- type : LRNType
- depth : int
--
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer() : void
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer(name : string, inputDimensions : int[], type : LRNType, depth : int) : void
+ setType(type : LRNType) : void
+ setDepth(depth : int) : void
+ getType() : LRNType
+ getDepth() : int

group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4808</x>
      <y>920</y>
      <w>432</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsLayer

--

--
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer() : void
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer(name : string, inputDimensions : int[]) : void

group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1424</x>
      <y>688</y>
      <w>400</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
NeuralNetworkPkg::NetworkLayer

--
# name : string
# codeData : double[][][][]
--
+ setName(name : string) : void
+ setInputDimensions(inputDimensions : int[]) : void
+ getName() : string
+ getInputDimensions() : int[]
+ getTensorDimenssions() : int[]

group=9</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>856</y>
      <w>4280</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;5330.0;20.0;5330.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3608</x>
      <y>864</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4072</x>
      <y>864</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4520</x>
      <y>864</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3016</x>
      <y>864</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5008</x>
      <y>864</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>528</x>
      <y>520</y>
      <w>24</w>
      <h>712</h>
    </coordinates>
    <panel_attributes>lt=.
</panel_attributes>
    <additional_attributes>10.0;870.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>856</x>
      <y>1120</y>
      <w>528</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
convolutionCode</panel_attributes>
    <additional_attributes>520.0;10.0;520.0;190.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1264</x>
      <y>1040</y>
      <w>656</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
convolutionCode</panel_attributes>
    <additional_attributes>680.0;10.0;680.0;290.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1800</x>
      <y>1120</y>
      <w>656</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
convolutionCode</panel_attributes>
    <additional_attributes>680.0;10.0;680.0;190.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2336</x>
      <y>1080</y>
      <w>816</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
convolutionCode</panel_attributes>
    <additional_attributes>880.0;10.0;880.0;240.0;10.0;240.0</additional_attributes>
  </element>
</diagram>
