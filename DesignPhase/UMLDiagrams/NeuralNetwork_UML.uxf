<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>16</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>544</x>
      <y>0</y>
      <w>624</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NeuralNetwork

--
- name : string
- currentLayer : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork() : void
+ &lt;&lt;constructor&gt;&gt; NeuralNetwork(name : string) : void
+ addLayer(layer : NetworkLayer) : void
+ getFirstLayer() : NetworkLayer
+ getLastLayer() : NetworkLayer
+ getNextLayer() : NetworkLayer
+ getPreviousLayer() : NetworkLayer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2336</x>
      <y>128</y>
      <w>800</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NetworkLayer

--
# name : string
# inputDimensions : int[]
--
+ setName(name : string) : void
+ setInputDimensions(inputDimensions : int[]) : void
+ getName() : string
+ getInputDimensions() : int[]
+ getTensorDimenssions() : int[]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1088</x>
      <y>592</y>
      <w>1472</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionLayer

--
- weigthsTensor : double[][][][]
- stride : int
- padding : int
--
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer() : void
+ &lt;&lt;constructor&gt;&gt; ConvolutionLayer(name : string, inputDimensions : int[], weights : double[][][][], stride : int, padding : int) : void
+ setWeigthsTensor(weights : double[][][][]) : void
+ setStride(stride : int) : void
+ setPadding(padding : int) : void
+ getWeigthsTensor() : double[][][][]
+ getStride() : int
+ getPadding() : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3760</x>
      <y>592</y>
      <w>1296</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingLayer

--
- type : PollingType
- size : int
- stride : int
--
+ &lt;&lt;constructor&gt;&gt; polingLayer() : void
+ &lt;&lt;constructor&gt;&gt; polingLayer(name : string, inputDimensions : int[], size : int, stride : int, type : PollingType) : void
+ setType(type : PollingType) : void
+ setSize(size : int) : void
+ setStride(stride : int) : void
+ getType() : PollingType
+ getSize() : int
+ getStride() : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6544</x>
      <y>592</y>
      <w>1072</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseLayer

--
- matrix : double[][]
--
+ &lt;&lt;constructor&gt;&gt; DenseLayer() : void
+ &lt;&lt;constructor&gt;&gt; DenseLayer(name : string, inputDimensions : int[], matrix : double[][]) : void
+ setMatrix(matrix : double[][]) : void
+ getMatrix() : double[][]


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>11600</x>
      <y>592</y>
      <w>848</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionLayer

--
- currentChain : &lt;pointer&gt;
--
+ &lt;&lt;constructor&gt;&gt; InceptionLayer() : void
+ &lt;&lt;constructor&gt;&gt; InceptionLayer(name : string, inputDimensions : int[]) : void
+ addLayer_chain(chain : NeuralNetwork) : void
+ getFirstChain() : NeuralNetwork
+ getNextChain() : NeuralNetwork</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1840</x>
      <y>464</y>
      <w>10160</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;6330.0;20.0;6330.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4320</x>
      <y>480</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7008</x>
      <y>480</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2704</x>
      <y>416</y>
      <w>48</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>240</y>
      <w>1216</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
list &lt;layers&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;740.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>544</x>
      <y>336</y>
      <w>272</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;150.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2592</x>
      <y>592</y>
      <w>1136</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationLayer

--
- function : Activation
--
+ &lt;&lt;constructor&gt;&gt; ActivationLayer() : void
+ &lt;&lt;constructor&gt;&gt; ActivationLayer(name : string, inputDimensions : int[], function : Activation) : void
+ setFunction(function : Activation) : void
+ getFunction() : Activation

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7648</x>
      <y>592</y>
      <w>800</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenLayer

--

--
+ &lt;&lt;constructor&gt;&gt; FlattenLayer() : void
+ &lt;&lt;constructor&gt;&gt; FlattenLayer(name : string, inputDimensions) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8480</x>
      <y>592</y>
      <w>1104</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutLayer

--
- dropoutRate : float
--
+ &lt;&lt;constructor&gt;&gt; DropoutLayer() : void
+ &lt;&lt;constructor&gt;&gt; DropoutLayer(name : string, inputDimensions : int[], dropoutRate : float) : void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3056</x>
      <y>480</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8000</x>
      <y>480</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8976</x>
      <y>480</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5088</x>
      <y>592</y>
      <w>1424</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationLayer

--
- type : LRNType
- depth : int
--
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer() : void
+ &lt;&lt;constructor&gt;&gt; LocalResponseNormalizationLayer(name : string, inputDimensions : int[], type : LRNType, depth : int) : void
+ setType(type : LRNType) : void
+ setDepth(depth : int) : void
+ getType() : LRNType
+ getDepth() : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5776</x>
      <y>480</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>16</y>
      <w>11184</w>
      <h>608</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
list &lt;chains&gt;
</panel_attributes>
    <additional_attributes>6880.0;360.0;6880.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9616</x>
      <y>592</y>
      <w>944</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsLayer

--

--
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer() : void
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer(name : string, inputDimensions : int[]) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>10016</x>
      <y>480</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>144</x>
      <y>528</y>
      <w>416</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::Activation

--
SIGMOID
TANH
RELU
LEAKING_RELU
PARAMETRIC_RELU
SOFTMAX
SWISH</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>144</x>
      <y>832</y>
      <w>416</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::PollingType

--
MAX
AVEREAGE</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>144</x>
      <y>1008</y>
      <w>416</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::LRNType

--
INTER_CHANNEL
INTRA_CHANNEL</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>544</x>
      <y>560</y>
      <w>192</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;200.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>544</x>
      <y>864</y>
      <w>192</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
</panel_attributes>
    <additional_attributes>100.0;10.0;100.0;120.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>608</x>
      <y>1504</y>
      <w>1040</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::NetworkOperations

--
- platformName : string
--
+ &lt;&lt;constructor&gt;&gt; NetworkOperations() : void
+ &lt;&lt;constructor&gt;&gt; NetworkOperations(platformName : string) : void
+ addKernelCode(layerType : Layertype, kernelCode : string[]) : void
+ executeCalculation(layer : NetworkLayer, inputData : double[][][]) : double[][][]
+ executeBackPropagation(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1424</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>NeuralNetworkPkg::ConvolutionCode
{abstract}
--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3936</x>
      <y>1920</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2736</x>
      <y>1824</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2880</x>
      <y>1920</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2304</x>
      <y>1648</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
/NeuralNetworkPkg::NetworkLayer/
{abstract}
--
# kernelCode : string[]
--
/# setKernelCode(kernelCode : string[]) : void/
/+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1872</x>
      <y>1904</y>
      <w>9168</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0;5710.0;20.0;5710.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6944</x>
      <y>1920</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7936</x>
      <y>1920</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8960</x>
      <y>1920</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4880</x>
      <y>1920</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9984</x>
      <y>1920</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>1264</y>
      <w>640</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;uses&gt;&gt;
</panel_attributes>
    <additional_attributes>380.0;240.0;10.0;240.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10592</x>
      <y>592</y>
      <w>976</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageLayer

--
outputData : double[][][]
--
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer() : void
+ &lt;&lt;constructor&gt;&gt; CollectResultsLayer(name : string, outputData : double[][][]) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>11088</x>
      <y>480</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>144</x>
      <y>1184</y>
      <w>416</w>
      <h>368</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
NeuralNetworkPkg::LayerType

--
CONVOLUTION
ACTIVATION
POLING
LRN
DENSE
FLATTEN
DROPOUT
COLLECT_RESULTS
INCEPTION
OUTPUT_STORAGE</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>1072</y>
      <w>176</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>880</y>
      <w>176</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>688</y>
      <w>176</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=.&gt;

</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1632</x>
      <y>1680</y>
      <w>704</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=10
layer</panel_attributes>
    <additional_attributes>10.0;20.0;420.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2432</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3440</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4448</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6464</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7472</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8480</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9488</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10496</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1632</x>
      <y>1520</y>
      <w>9728</w>
      <h>544</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
operations</panel_attributes>
    <additional_attributes>10.0;20.0;6060.0;20.0;6060.0;320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>2336</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeCPU

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>2576</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeFPGA

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>2816</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeGPU

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>3056</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ConvolutionCodeASIC

--
# kernelCode : string[]
--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1888</x>
      <y>3040</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1888</x>
      <y>2560</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1888</x>
      <y>2320</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1888</x>
      <y>2800</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::ActivationCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3008</x>
      <y>3040</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3008</x>
      <y>2800</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3008</x>
      <y>2560</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3008</x>
      <y>2320</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::PollingCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4112</x>
      <y>2320</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4112</x>
      <y>2544</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4112</x>
      <y>2784</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4112</x>
      <y>3040</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::LocalResponseNormalizationCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6208</x>
      <y>3040</y>
      <w>864</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6208</x>
      <y>2784</y>
      <w>864</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6208</x>
      <y>2544</y>
      <w>864</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6208</x>
      <y>2320</y>
      <w>864</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::FlattenCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7200</x>
      <y>3040</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7200</x>
      <y>2784</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7200</x>
      <y>2544</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>7200</x>
      <y>2320</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DropoutCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8176</x>
      <y>2320</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8176</x>
      <y>2784</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8176</x>
      <y>2544</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8176</x>
      <y>3040</y>
      <w>848</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::CollectResultsCode

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9152</x>
      <y>2320</y>
      <w>832</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9152</x>
      <y>3040</y>
      <w>832</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9152</x>
      <y>2784</y>
      <w>832</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9152</x>
      <y>2544</y>
      <w>832</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::OutputStorageCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10112</x>
      <y>3040</y>
      <w>880</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10112</x>
      <y>2784</y>
      <w>880</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10112</x>
      <y>2544</y>
      <w>880</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10112</x>
      <y>2320</y>
      <w>880</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::InceptionCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1728</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=1</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1728</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=1</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1728</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=1</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1728</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=1</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5936</x>
      <y>1920</y>
      <w>48</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5456</x>
      <y>2032</y>
      <w>976</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseCode
{abstract}
--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5216</x>
      <y>3040</y>
      <w>864</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseCodeASIC

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5216</x>
      <y>2784</y>
      <w>864</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseCodeGPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5216</x>
      <y>2544</y>
      <w>864</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseCodeFPGA

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5216</x>
      <y>2320</y>
      <w>864</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>
NeuralNetworkPkg::DenseCodeCPU

--

--
+ setKernelCode(kernelCode : string[]) : void
+ executeKernelCode(layer : NetworkLayer, inputData : double[][][][]) : double[][][][]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2848</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=2</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2848</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=2</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2848</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=2</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2848</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=2</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3968</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=3</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3968</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=3</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3968</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=3</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3968</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=3</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5072</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=4</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5072</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=4</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5072</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=4</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5072</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=4</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6064</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=5</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6064</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=5</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6064</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=5</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6064</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=5</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7056</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=6</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7056</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=6</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7056</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=6</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7056</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=6</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8032</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=7</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8032</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=7</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8032</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=7</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>8032</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=7</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9008</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=8</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9008</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=8</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9008</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=8</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9008</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=8</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>10976</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=9</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>10976</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=9</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>10976</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=9</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>10976</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=9</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9968</x>
      <y>2208</y>
      <w>128</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=10</panel_attributes>
    <additional_attributes>10.0;260.0;60.0;260.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9968</x>
      <y>2208</y>
      <w>128</w>
      <h>688</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=10</panel_attributes>
    <additional_attributes>10.0;410.0;60.0;410.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9968</x>
      <y>2208</y>
      <w>128</w>
      <h>944</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=10</panel_attributes>
    <additional_attributes>10.0;570.0;60.0;570.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>9968</x>
      <y>2208</y>
      <w>128</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
group=10</panel_attributes>
    <additional_attributes>10.0;110.0;60.0;110.0;60.0;10.0</additional_attributes>
  </element>
</diagram>
